{
    "sourceFile": "controller/adminController/couponController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1736744099499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736744111822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,11 @@\n //------------------------------------- Get all coupons ---------------------------\r\n \r\n const getCoupons = async (req, res) => {\r\n     const search = req.query.search || '';\r\n-    const page = parseInt(req.query.page) || 1; \r\n+    const page = parseInt(req.query.page) || 1; // Get the current page from the query string (default to page 1)\r\n     const limit = 10; // Define the number of coupons per page\r\n-    const skip = (page - 1) * limit; // Skip the previous pages' coupons\r\n+    const skip = (page - 1) * limit; \r\n \r\n     try {\r\n         if (req.params.id) {\r\n             const coupon = await Coupon.findById(req.params.id);\r\n"
                },
                {
                    "date": 1736744118186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n //------------------------------------- Get all coupons ---------------------------\r\n \r\n const getCoupons = async (req, res) => {\r\n     const search = req.query.search || '';\r\n-    const page = parseInt(req.query.page) || 1; // Get the current page from the query string (default to page 1)\r\n-    const limit = 10; // Define the number of coupons per page\r\n+    const page = parseInt(req.query.page) || 1; \r\n+    const limit = 10; \r\n     const skip = (page - 1) * limit; \r\n \r\n     try {\r\n         if (req.params.id) {\r\n"
                },
                {
                    "date": 1736744125368,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n             }\r\n             return res.json(coupon);\r\n         }\r\n \r\n-        // Fetch the coupons with pagination and search filter\r\n+      \r\n         const coupons = await Coupon.find({ code: { $regex: search, $options: 'i' } })\r\n             .skip(skip)\r\n             .limit(limit);\r\n \r\n"
                },
                {
                    "date": 1736744133678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n         const coupons = await Coupon.find({ code: { $regex: search, $options: 'i' } })\r\n             .skip(skip)\r\n             .limit(limit);\r\n \r\n-        // Get the total count of coupons for pagination\r\n+        \r\n         const count = await Coupon.countDocuments({ code: { $regex: search, $options: 'i' } });\r\n \r\n         // Calculate the total number of pages\r\n         const totalPages = Math.ceil(count / limit);\r\n"
                },
                {
                    "date": 1736744142642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \r\n         \r\n         const count = await Coupon.countDocuments({ code: { $regex: search, $options: 'i' } });\r\n \r\n-        // Calculate the total number of pages\r\n+  \r\n         const totalPages = Math.ceil(count / limit);\r\n \r\n         // Render the page with pagination data\r\n         res.render('admin/coupons', {\r\n"
                },
                {
                    "date": 1736748439410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const getCoupons = async (req, res) => {\r\n     const search = req.query.search || '';\r\n     const page = parseInt(req.query.page) || 1; \r\n-    const limit = 10; \r\n+    const limit = 1; \r\n     const skip = (page - 1) * limit; \r\n \r\n     try {\r\n         if (req.params.id) {\r\n"
                },
                {
                    "date": 1736748452770,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n \r\n const getCoupons = async (req, res) => {\r\n     const search = req.query.search || '';\r\n     const page = parseInt(req.query.page) || 1; \r\n-    const limit = 1; \r\n+    const limit = ; \r\n     const skip = (page - 1) * limit; \r\n \r\n     try {\r\n         if (req.params.id) {\r\n"
                }
            ],
            "date": 1736744099499,
            "name": "Commit-0",
            "content": "const Coupon = require('../../model/couponSchema');\r\n\r\n//------------------------------------- Get all coupons ---------------------------\r\n\r\nconst getCoupons = async (req, res) => {\r\n    const search = req.query.search || '';\r\n    const page = parseInt(req.query.page) || 1; \r\n    const limit = 10; // Define the number of coupons per page\r\n    const skip = (page - 1) * limit; // Skip the previous pages' coupons\r\n\r\n    try {\r\n        if (req.params.id) {\r\n            const coupon = await Coupon.findById(req.params.id);\r\n            if (!coupon) {\r\n                return res.status(404).json({ message: 'Coupon not found' });\r\n            }\r\n            return res.json(coupon);\r\n        }\r\n\r\n        // Fetch the coupons with pagination and search filter\r\n        const coupons = await Coupon.find({ code: { $regex: search, $options: 'i' } })\r\n            .skip(skip)\r\n            .limit(limit);\r\n\r\n        // Get the total count of coupons for pagination\r\n        const count = await Coupon.countDocuments({ code: { $regex: search, $options: 'i' } });\r\n\r\n        // Calculate the total number of pages\r\n        const totalPages = Math.ceil(count / limit);\r\n\r\n        // Render the page with pagination data\r\n        res.render('admin/coupons', {\r\n            coupons,\r\n            title: 'Coupons',\r\n            currentPage: page,\r\n            totalPages: totalPages,\r\n            search\r\n        });\r\n    } catch (error) {\r\n        console.log(`Error while rendering coupon page: ${error}`);\r\n        res.status(500).json({ message: 'Error fetching coupon data' });\r\n    }\r\n};\r\n\r\n//--------------------------------- Add a new coupon -----------------------------\r\n\r\nconst addCoupon = async (req, res) => {\r\n    console.log(\"enterredvadd coupon\")\r\n    const { code, discountType, discountValue, maxDiscountAmount, startDate, endDate, minimumOrderAmount,usageCount } = req.body;\r\nconsole.log(req.body,\"req.body of add coupon \")\r\n    // Validation: Check if all required fields are present\r\n    if (!code || !discountType || !discountValue || !startDate || !endDate || !minimumOrderAmount ||!usageCount) {\r\n        return res.status(400).json({ message: 'All fields are required' });\r\n    }\r\n\r\n    // Validation: Ensure maxDiscountAmount is provided for Percentage discount type\r\n    if (discountType === 'Percentage' && (maxDiscountAmount === undefined || maxDiscountAmount <= 0)) {\r\n        return res.status(400).json({ message: 'For percentage discounts, maxDiscountAmount must be greater than 0' });\r\n    }\r\n\r\n    try {\r\n        // Check if coupon code already exists\r\n        const existingCoupon = await Coupon.findOne({ code });\r\n        if (existingCoupon) {\r\n            return res.status(400).json({ message: 'Coupon code already exists' });\r\n        }\r\n\r\n        // Create a new coupon with the provided data\r\n        const newCoupon = new Coupon({\r\n            code,\r\n            discountType,\r\n            discountValue,\r\n            maxDiscountAmount,  // Save maxDiscountAmount for percentage-based coupons\r\n            startDate,\r\n            endDate,\r\n            minimumOrderAmount,\r\n            usageCount\r\n        });\r\n\r\n        // Save the new coupon\r\n        await newCoupon.save();\r\n        res.json({ message: 'Coupon added successfully' });\r\n    } catch (error) {\r\n        console.error('Error adding coupon:', error);\r\n        res.status(500).json({ message: 'Error adding coupon' });\r\n    }\r\n};\r\n\r\n\r\n\r\n//------------------------------------- Edit a coupon ----------------------------\r\n\r\nconst editCoupon = async (req, res) => {\r\n    const { id, code, discountType, discountValue, startDate, endDate, minimumOrderAmount,usageCount } = req.body;\r\n    if (!id || !code || !discountType || !discountValue || !startDate || !endDate || !minimumOrderAmount || !usageCount === undefined) {\r\n        return res.status(400).json({ message: 'All fields are required' });\r\n    }\r\n    try {\r\n        const updatedCoupon = await Coupon.findByIdAndUpdate(\r\n            id, { code, discountType, discountValue, startDate, endDate, minimumOrderAmount,usageCount }, { new: true }\r\n        );\r\n        if (!updatedCoupon) {\r\n            return res.status(404).json({ message: 'Coupon not found' });\r\n        }\r\n        res.json({ message: 'Coupon updated successfully' });\r\n    } catch (error) {\r\n        res.status(500).json({ message: 'Error updating coupon' });\r\n    }\r\n};\r\n\r\n\r\n//----------------------------- Toggle coupon status ----------------------------\r\n\r\nconst toggleCouponStatus = async (req, res) => {\r\n    const couponId = req.query.id;\r\n    const status = req.query.status === 'true';\r\n    try {\r\n        await Coupon.findByIdAndUpdate(couponId, { isActive: !status });\r\n        req.flash('error','Coupon status updated successfully')\r\n        res.redirect('/admin/coupons')\r\n    } catch (error) {\r\n        console.log(`Error while changing status: ${error}`);\r\n        res.flash('error' ,'Error updating coupon status' );\r\n    }\r\n};\r\n\r\n//--------------------------------- Delete a coupon ------------------------------\r\n\r\nconst deleteCoupon = async (req, res) => {\r\n    const { id } = req.params;\r\n    try {\r\n        await Coupon.findByIdAndDelete(id);\r\n        res.json({ message: 'Coupon deleted successfully' });\r\n    } catch (error) {\r\n        res.status(500).json({ message: 'Error deleting coupon' });\r\n    }\r\n};\r\n\r\n\r\n\r\nmodule.exports = { getCoupons , addCoupon , editCoupon , toggleCouponStatus , deleteCoupon}"
        }
    ]
}