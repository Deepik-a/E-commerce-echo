{
    "sourceFile": "views/user/addProduct.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736396305812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736396305812,
            "name": "Commit-0",
            "content": "\r\n    \r\n    <!-- include the sidebar partial  -->\r\n    <%- include('sidebar') %>\r\n \r\n \r\n      <!-- Navbar -->\r\n <div class=\"fixed left-0 right-0 z-10 flex items-center justify-between p-8 h-20 shadow-md ml-64 bg-gray-100\">\r\n     <div>\r\n         <!-- Default content goes here -->\r\n         <h2 class=\"text-lg font-semibold\">Products</h2>\r\n     </div>\r\n     <div>\r\n         <h2 class=\"text-lg font-semibold\">Add Product</h2>\r\n     </div>\r\n   </div>\r\n \r\n   <div class=\"mx-8 pb-24 pt-28\">\r\n    <form id=\"addProductForm\" class=\"space-y-6\">\r\n      <!-- Product Name -->\r\n      <div>\r\n        <label for=\"productName\" class=\"block\">Product Name</label>\r\n        <input type=\"text\" id=\"productName\" name=\"productName\" class=\"border border-gray-300 p-2 w-full\" />\r\n        <p id=\"productNameError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Description -->\r\n      <div>\r\n        <label for=\"description\" class=\"block\">Description</label>\r\n        <input type=\"text\" id=\"description\" name=\"description\" class=\"border border-gray-300 p-2 w-full\" />\r\n        <p id=\"descriptionError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Price -->\r\n      <div>\r\n        <label for=\"price\" class=\"block\">Price</label>\r\n        <input type=\"number\" id=\"price\" name=\"price\" class=\"border border-gray-300 p-2 w-full\" min=\"0\" />\r\n        <p id=\"priceError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Discount -->\r\n      <div>\r\n        <label for=\"discount\" class=\"block\">Discount</label>\r\n        <input type=\"number\" id=\"discount\" name=\"discount\" class=\"border border-gray-300 p-2 w-full\" min=\"0\" />\r\n        <p id=\"discountError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Stock -->\r\n      <div>\r\n        <label for=\"stock\" class=\"block\">Stock</label>\r\n        <input type=\"number\" id=\"stock\" name=\"stock\" class=\"border border-gray-300 p-2 w-full\" min=\"0\" />\r\n        <p id=\"stockError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Category -->\r\n      <div>\r\n        <label for=\"category\" class=\"block\">Category</label>\r\n        <select id=\"category\" name=\"category\" class=\"border border-gray-300 p-2 w-full\">\r\n          <option value=\"\" disabled selected>Select a category</option>\r\n          <% categories.forEach(function (category) { %>\r\n            <option value=\"<%= category._id %>\"><%= category.name %></option>\r\n          <% }); %>\r\n        </select>\r\n        <p id=\"categoryError\" class=\"text-red-500 text-sm\" aria-live=\"assertive\"></p>\r\n      </div>\r\n  \r\n      <!-- Product Images -->\r\n      <div>\r\n        <label for=\"images\" class=\"block\">Product Images</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"images\"\r\n          accept=\"image/*\"\r\n          class=\"border border-blue-500 p-3 w-full cursor-pointer hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n        <p id=\"imageError\" class=\"text-red-500 text-sm mt-2\" aria-live=\"assertive\"></p>\r\n  \r\n        <!-- Preview Area -->\r\n        <div id=\"imagePreview\" class=\"grid grid-cols-3 gap-2 mt-4\">\r\n            <!-- Dynamically generated image previews will appear here -->\r\n        </div>\r\n  \r\n      <!-- Cropper Modal -->\r\n      <div id=\"cropperModal\" class=\"fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 hidden z-50\">\r\n        <div class=\"bg-white p-4 rounded-lg w-[90%] max-w-[600px]\">\r\n          <h2 class=\"text-lg font-semibold mb-4\">Crop Image</h2>\r\n          <!-- Cropper container -->\r\n          <div class=\"w-full h-[400px] flex justify-center items-center overflow-hidden\">\r\n            <img id=\"cropperImage\" src=\"\" alt=\"To be cropped\" class=\"max-w-full max-h-full block\">\r\n          </div>\r\n          <!-- Modal buttons -->\r\n          <div class=\"flex justify-end space-x-4 mt-4\">\r\n            <button id=\"cancelCrop\" type=\"button\" class=\"px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400\">Cancel</button>\r\n            <button id=\"cropImage\" type=\"button\" class=\"px-6 py-2 bg-black text-white rounded-lg hover:bg-gray-900\">Crop</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Submit Button -->\r\n      <div class=\"text-right\">\r\n        <button\r\n          type=\"submit\"\r\n          class=\"px-4 py-2 bg-blue-800 text-white text-sm tracking-wider font-medium rounded hover:bg-blue-900\">\r\n          Add Product\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  \r\n \r\n \r\n  <!-- Updated JavaScript for handling form submission -->\r\n  <script>\r\n    let selectedFile;\r\n    let cropper;\r\n    let croppedImages = []; // Store the cropped images' blobs\r\n    const cropperModal = document.getElementById('cropperModal');\r\n    const imagePreview = document.getElementById('imagePreview');\r\n    const cropperImage = document.getElementById('cropperImage');\r\n    const imagesInput = document.getElementById('images');\r\n    const imageError = document.getElementById(\"imageError\");\r\n  \r\n    // Handle image selection\r\n    imagesInput.addEventListener('change', (event) => {\r\n      const files = event.target.files;\r\n      if (files && files.length > 0) {\r\n        selectedFile = files[0];\r\n  \r\n        imageError.textContent = '';\r\n  \r\n        // Validate file type\r\n        if (!selectedFile.type.startsWith('image/')) {\r\n          imageError.textContent = 'Please select a valid image file.';\r\n          imagesInput.value = '';\r\n          return;\r\n        }\r\n  \r\n        const reader = new FileReader();\r\n  \r\n        reader.onload = function (e) {\r\n          cropperImage.src = e.target.result;\r\n          cropperModal.classList.remove('hidden');\r\n          if (cropper) {\r\n            cropper.destroy();\r\n          }\r\n          cropper = new Cropper(cropperImage, {\r\n            aspectRatio: 1,\r\n            viewMode: 1,\r\n            autoCropArea: 1,\r\n          });\r\n        };\r\n        reader.readAsDataURL(selectedFile);\r\n      }\r\n    });\r\n  \r\n    // Cancel button - close the modal\r\n    document.getElementById('cancelCrop').addEventListener('click', () => {\r\n      cropperModal.classList.add('hidden');\r\n      imagesInput.value = ''; // Clear selected files\r\n    });\r\n  \r\n    // Crop image button\r\n    document.getElementById('cropImage').addEventListener('click', () => {\r\n      const canvas = cropper.getCroppedCanvas();\r\n      canvas.toBlob((blob) => {\r\n        // Create a new file from the blob\r\n        const croppedFile = new File([blob], `cropped-${Date.now()}.png`, { type: 'image/png' });\r\n  \r\n        // Store the cropped image as a file in FormData\r\n        croppedImages.push(croppedFile);\r\n  \r\n        // Create the preview element (unchanged)\r\n        const previewContainer = document.createElement('div');\r\n        previewContainer.classList.add('relative');\r\n  \r\n        const img = document.createElement('img');\r\n        img.src = URL.createObjectURL(croppedFile);\r\n        img.classList.add('w-full', 'h-auto', 'rounded');\r\n  \r\n        const removeButton = document.createElement('button');\r\n        removeButton.textContent = 'Remove';\r\n        removeButton.classList.add('absolute', 'top-0', 'right-0', 'bg-red-600', 'text-white', 'rounded', 'px-2', 'py-1', 'text-xs');\r\n        removeButton.addEventListener('click', () => {\r\n          imagePreview.removeChild(previewContainer); // Remove preview\r\n          const index = croppedImages.indexOf(croppedFile);\r\n          if (index > -1) {\r\n            croppedImages.splice(index, 1); // Remove from array\r\n          }\r\n          imagesInput.value = '';\r\n        });\r\n  \r\n        previewContainer.appendChild(img);\r\n        previewContainer.appendChild(removeButton);\r\n        imagePreview.appendChild(previewContainer);\r\n  \r\n        cropperModal.classList.add('hidden'); // Close modal\r\n        imagesInput.value = '';\r\n      }, 'image/png');\r\n    });\r\n  \r\n    // Form validation before submission\r\n    document.getElementById(\"addProductForm\").addEventListener(\"submit\", async function (e) {\r\n      e.preventDefault(); // Prevent the default form submission\r\n  \r\n      let isValid = true;\r\n      // Perform all the validation checks here (already present in your code)\r\n  \r\n      // Product Name validation\r\n      const productName = document.getElementById(\"productName\").value;\r\n      const productNameError = document.getElementById(\"productNameError\");\r\n      if (productName.length < 3 || productName.length > 50 || /[^a-zA-Z0-9 ]/.test(productName)) {\r\n        productNameError.textContent = \"Product name must be between 3 and 50 characters and contain no special characters.\";\r\n        isValid = false;\r\n      } else {\r\n        productNameError.textContent = \"\";\r\n      }\r\n  \r\n      // Description validation\r\n      const description = document.getElementById(\"description\").value;\r\n      const descriptionError = document.getElementById(\"descriptionError\");\r\n      if (description.length < 10 || description.length > 1000) {\r\n        descriptionError.textContent = \"Product description must be between 10 and 1000 characters.\";\r\n        isValid = false;\r\n      } else {\r\n        descriptionError.textContent = \"\";\r\n      }\r\n  \r\n      // Category validation\r\n      const category = document.getElementById(\"category\").value;\r\n      const categoryError = document.getElementById(\"categoryError\");\r\n      if (!category) {\r\n        categoryError.textContent = \"Please select a category.\";\r\n        isValid = false;\r\n      } else {\r\n        categoryError.textContent = \"\";\r\n      }\r\n  \r\n      // Price validation\r\n      const price = parseFloat(document.getElementById(\"price\").value);\r\n      const priceError = document.getElementById(\"priceError\");\r\n      if (isNaN(price) || price <= 0) {\r\n        priceError.textContent = \"Product price must be greater than zero.\";\r\n        isValid = false;\r\n      } else {\r\n        priceError.textContent = \"\";\r\n      }\r\n  \r\n      // Stock validation\r\n      const stock = parseInt(document.getElementById(\"stock\").value);\r\n      const stockError = document.getElementById(\"stockError\");\r\n      if (isNaN(stock) || stock < 0) {\r\n        stockError.textContent = \"Stock must be zero or greater.\";\r\n        isValid = false;\r\n      } else {\r\n        stockError.textContent = \"\";\r\n      }\r\n  \r\n      // Discount validation\r\n      const discount = parseInt(document.getElementById(\"discount\").value);\r\n      const discountError = document.getElementById(\"discountError\");\r\n      if (isNaN(discount) || discount < 0 || discount > 100) {\r\n        discountError.textContent = \"Discount must be a percentage between 0 and 100.\";\r\n        isValid = false;\r\n      } else {\r\n        discountError.textContent = \"\";\r\n      }\r\n  \r\n      // Image validation\r\n      if (croppedImages.length < 3) {\r\n        imageError.textContent = \"Please select at least 3 images.\";\r\n        isValid = false;\r\n      } else {\r\n        imageError.textContent = \"\";\r\n      }\r\n  \r\n      if (!isValid) {\r\n        return;\r\n      }\r\n  \r\n      // Now, create FormData and append all fields, including the cropped images\r\n      const formData = new FormData(this);\r\n  \r\n      // Append all the cropped images\r\n      croppedImages.forEach((image, index) => {\r\n        formData.append('newImages', image);\r\n      });\r\n  \r\n      try {\r\n        // Send the form data using fetch\r\n        const response = await fetch('/admin/addproduct', {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n  \r\n        const result = await response.json();\r\n  \r\n        if (response.ok) {\r\n          // Show SweetAlert for successful product adding\r\n          Swal.fire({\r\n            icon: 'success',\r\n            title: 'Successfully Added!',\r\n            text: 'Product successfully added.',\r\n            background: '#F8F9FA',\r\n            color: '#333',\r\n            timer: 3000,\r\n            showConfirmButton: false\r\n          });\r\n  \r\n          // Redirect to Product list page\r\n          setTimeout(() => {\r\n            window.location.href = '/admin/products'\r\n          }, 2000);\r\n  \r\n        } else {\r\n          // Show SweetAlert for Multer error\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Error',\r\n            text: result.message || 'An error occurred while uploading the product.',\r\n            background: '#F8F9FA',\r\n            color: '#333',\r\n            timer: 3000,\r\n            showConfirmButton: false\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        // Show SweetAlert for network or other errors\r\n        Swal.fire({\r\n          icon: 'error',\r\n          title: 'Error',\r\n          text: 'There was an issue processing your request. Please try again.',\r\n          background: '#F8F9FA',\r\n          color: '#333',\r\n          timer: 3000,\r\n          showConfirmButton: false\r\n        });\r\n      }\r\n    });\r\n  </script>\r\n  \r\n \r\n  \r\n    <!-- JavaScript Libraries(needed)-->\r\n    <script src=\"https://code.jquery.com/jquery-3.4.1.min.js\"></script>\r\n    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n     <!-- Cropper JS -->\r\n     <link href=\"https://unpkg.com/cropperjs/dist/cropper.min.css\" rel=\"stylesheet\">\r\n \r\n     <!-- Toastify  -->\r\n     <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\r\n        <!-- Tailwind CSS Script -->\r\n        <script src=\"https://cdn.tailwindcss.com\"></script>\r\n \r\n        <!-- SweetAlert -->\r\n        <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n    \r\n        <!-- Cropper JS -->\r\n        <script src=\"https://unpkg.com/cropperjs/dist/cropper.min.js\"></script> \r\n    \r\n        <!-- Toastify  -->\r\n        <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>\r\n "
        }
    ]
}