{
    "sourceFile": "views/user/cart.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736742338425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736742338425,
            "name": "Commit-0",
            "content": "\r\n<%-include('navbar') %>\r\n<%-include('navbar2') %>\r\n<title>Your Cart</title>\r\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css\">\r\n    \r\n<style>\r\n    .cart-container {\r\n    animation: slideIn 0.5s ease-out;\r\n    border-radius: 12px;\r\n    padding: 25px;\r\n    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 50px;\r\n}\r\n\r\n@keyframes slideIn {\r\n    from {\r\n        opacity: 0;\r\n        transform: translateY(30px);\r\n    }\r\n    to {\r\n        opacity: 1;\r\n        transform: translateY(0);\r\n    }\r\n}\r\n\r\n.cart-header {\r\n    color: rgb(26, 83, 25);\r\n    margin-bottom: 1.5rem;\r\n    animation: fadeIn 0.8s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n    from { opacity: 0; }\r\n    to { opacity: 1; }\r\n}\r\n\r\n.table-responsive {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.cart-table {\r\n    margin-bottom: 0;\r\n    background-color: white;\r\n}\r\n\r\n.cart-table th {\r\n    background-color: rgb(26, 83, 25);\r\n    color: white;\r\n    border: none;\r\n    padding: 15px;\r\n}\r\n\r\n\r\n\r\n.product-image {\r\n    transition: transform 0.3s ease;\r\n    max-width: 150px;\r\n    height: auto;\r\n}\r\n\r\n.quantity-control {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.quantity-btn {\r\n    background-color: rgb(26, 83, 25);\r\n    color: white;\r\n    border: none;\r\n    width: 32px;\r\n    height: 32px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n\r\n\r\n.quantity-input {\r\n    width: 50px !important;\r\n    text-align: center;\r\n    border: 1px solid rgb(128, 175, 129);\r\n}\r\n\r\n.remove-btn {\r\n    background-color: #800000;\r\n    border: none;\r\n    color: white;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n\r\n\r\n.cart-footer {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-top: 2rem;\r\n    flex-wrap: wrap;\r\n    gap: 1rem;\r\n}\r\n\r\n.total-amount {\r\n    font-size: 1.25rem;\r\n    color: rgb(26, 83, 25);\r\n    animation: pulse 2s infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n    0% { transform: scale(1); }\r\n    50% { transform: scale(1.02); }\r\n    100% { transform: scale(1); }\r\n}\r\n\r\n.checkout-btn {\r\n    background-color: rgb(26, 83, 25);\r\n    color: white;\r\n    border: none;\r\n    padding: 12px 30px;\r\n    border-radius: 6px;\r\n    transition: all 0.3s ease;\r\n    font-size: 1.1rem;\r\n}\r\n\r\n\r\n.empty-cart {\r\n    text-align: center;\r\n   width:100%;\r\n   height:600px;\r\n    color: rgb(26, 83, 25);\r\n    font-size: 2.2rem;\r\n    font-weight: bold;\r\n    background-image: url('../../uploads/close-up-toy-cart-with-easter-eggs.jpg');\r\n    background-position: center;\r\n    background-size: cover;\r\n   \r\n    \r\n  \r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .cart-container {\r\n        padding: 15px;\r\n    }\r\n\r\n    .cart-table thead {\r\n        display: none;\r\n    }\r\n\r\n    .cart-table, .cart-table tbody, .cart-table tr, .cart-table td {\r\n        display: block;\r\n        width: 100%;\r\n    }\r\n\r\n    .cart-table tr {\r\n        margin-bottom: 1rem;\r\n        border: 1px solid rgb(128, 175, 129);\r\n        border-radius: 8px;\r\n        padding: 10px;\r\n    }\r\n\r\n    .cart-table td {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 10px;\r\n        border: none;\r\n    }\r\n\r\n    .cart-table td::before {\r\n        content: attr(data-label);\r\n        font-weight: bold;\r\n        margin-right: 1rem;\r\n    }\r\n\r\n    .product-image {\r\n        max-width: 120px;\r\n    }\r\n\r\n    .cart-footer {\r\n        flex-direction: column;\r\n        text-align: center;\r\n    }\r\n\r\n    .total-amount {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    .quantity-btn, .remove-btn, .checkout-btn {\r\n        width: 100%;\r\n        margin: 5px 0;\r\n        padding: 10px;\r\n    }\r\n}\r\n.quantity-btn:hover {\r\n    background-color: rgb(34, 101, 33); /* Slightly darker green for hover effect */\r\n    color: white; /* Ensure text color stays white */\r\n    transform: scale(1.1); /* Add a subtle zoom effect */\r\n}\r\n\r\n.remove-btn:hover {\r\n    background-color: #a00000; /* Slightly lighter red for hover effect */\r\n    color: white;\r\n    transform: scale(1.1);\r\n}\r\n\r\n.checkout-btn:hover {\r\n    background-color: rgb(34, 101, 33); /* Slightly darker green */\r\n    color: white;\r\n    transform: scale(1.1); /* Add a subtle zoom effect */\r\n}\r\n\r\n</style>\r\n    <div class=\"container mt-5\">\r\n        <div class=\"cart-container\">\r\n            <h2 class=\"cart-header\">Your Cart</h2>\r\n\r\n            <% if (typeof alertMessage !== 'undefined' && alertMessage !== '') { %>\r\n                <script>\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: '<%= alertMessage %>',\r\n                    });\r\n                </script>\r\n            <% } %>\r\n\r\n            <% if (cart.items && cart.items.length > 0) { %>\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table cart-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>Product</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                                <th>Total</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <% cart.items.forEach(item => { %>\r\n                            \r\n                                <tr>\r\n                                    <td data-label=\"Image\">\r\n                                        <img src=<%= '/uploads/' +   item.productId.imgArray[0]%> alt=\"Product Image\" class=\"product-image\" />\r\n                                        \r\n                                    </td>\r\n                                    <td data-label=\"Product\"><%= item.productId.name %></td>\r\n                                    <td data-label=\"Price\">Rs <%= item.productPrice.toFixed(2) %></td>\r\n                                    <td data-label=\"Quantity\">\r\n                                        <form class=\"update-quantity-form\" data-product-id=\"<%= item.productId._id %>\">\r\n                                            <div class=\"quantity-control\">\r\n                                                <button type=\"button\" class=\"btn quantity-btn decrement-quantity\" data-action=\"decrement\">-</button>\r\n                                                <input type=\"text\" name=\"productCount\" value=\"<%= item.productCount %>\" readonly class=\"form-control quantity-input\" />\r\n                                                <button type=\"button\" class=\"btn quantity-btn increment-quantity\" data-action=\"increment\">+</button>\r\n                                            </div>\r\n                                        </form>\r\n                                    </td>\r\n                                    <td data-label=\"Total\">Rs <span class=\"item-total\" data-price=\"<%= item.productPrice %>\"><%= (item.productPrice * item.productCount).toFixed(2) %></span></td>\r\n                                    <td data-label=\"Action\">\r\n                                        <a href=\"/cart/remove/<%= item.productId._id %>\" class=\"btn remove-btn\">Remove</a>\r\n                                    </td>\r\n                                </tr>\r\n                            <% }); %>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\"cart-footer\">\r\n                    <h4 id=\"cart-total\" class=\"total-amount\">Total Amount: Rs <%= cart.items.reduce((total, item) => total + (item.productPrice * item.productCount), 0).toFixed(2) %></h4>\r\n                    <button id=\"checkout-btn\" class=\"btn checkout-btn\">Buy Now</button>\r\n                </div>\r\n            <% } else { %>\r\n                <div class=\"empty-cart \">\r\n                    <p>Your cart is empty.</p>\r\n                </div>\r\n            <% } %>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n<!-- Script for Sweet alert CDN --> \r\n<script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n  \r\n\r\n\r\n\r\n<!-- Script to handle limit and stock exceeded -->\r\n\r\n    <script>\r\n\r\n        document.querySelectorAll('.increment-quantity, .decrement-quantity').forEach(button => {\r\n            button.addEventListener('click', function() {\r\n                const form = this.closest('.update-quantity-form');\r\n                const productId = form.dataset.productId;\r\n                const action = this.dataset.action;\r\n                const productCountElement = form.querySelector('.quantity-input');\r\n                let productCount = parseInt(productCountElement.value);\r\n\r\n                if (action === 'increment') {\r\n                    productCount++;\r\n                } else if (action === 'decrement' && productCount > 1) {\r\n                    productCount--;\r\n                }\r\n\r\n                fetch(`/cart/${action}`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({ productId, productCount })\r\n                })\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log('Response data:', data);\r\n                    if (data.success) {\r\n                        productCountElement.value = productCount;\r\n                        const itemTotal = (data.updatedPrice).toFixed(2);\r\n                        form.closest('tr').querySelector('.item-total').textContent = itemTotal;\r\n                        document.getElementById('cart-total').textContent = `Total Amount: Rs ${data.cartTotal.toFixed(2)}`;\r\n                        \r\n                        const decrementButton = form.querySelector('.decrement-quantity');\r\n                        if (productCount === 1) {\r\n                            decrementButton.setAttribute('disabled', true);\r\n                        } else {\r\n                            decrementButton.removeAttribute('disabled');\r\n                        }\r\n                    } else {\r\n                        if (data.message.includes('Maximum quantity')) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Limit Exceeded',\r\n                                text: data.message\r\n                            });\r\n                        } else if (data.message.includes('Available quantity')) {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Stock Exceeded',\r\n                                text: data.message\r\n                            });\r\n                        } else {\r\n                            Swal.fire({\r\n                                icon: 'error',\r\n                                title: 'Error',\r\n                                text: data.message || 'Could not update quantity'\r\n                            });\r\n                        }\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Error',\r\n                        text: 'Something went wrong!'\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n\r\n\r\n\r\n        document.getElementById('checkout-btn').addEventListener('click', async () => {\r\n    try {\r\n        const response = await fetch('/checkout/validate', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.success) {\r\n            // Redirect to checkout if validation succeeds\r\n            window.location.href = '/checkout';\r\n        } else {\r\n            // Show error message using Swal\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Checkout Error',\r\n                text: data.message, // Show the error message from the backend\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n\r\n        // Handle unexpected errors\r\n        Swal.fire({\r\n            icon: 'error',\r\n            title: 'Unexpected Error',\r\n            text: 'An unexpected error occurred. Please try again later.',\r\n        });\r\n    }\r\n});\r\n\r\n    </script>\r\n\r\n\r\n<%- include('footer') %>\r\n"
        }
    ]
}