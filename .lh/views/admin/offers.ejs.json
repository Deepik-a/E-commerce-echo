{
    "sourceFile": "views/admin/offers.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736326322402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736326322402,
            "name": "Commit-0",
            "content": "\r\n    <!-- Include Sidebar -->\r\n   \r\n    <%- include('sidebar') %>\r\n    <!-- Main Content -->\r\n       <!-- Navbar  -->\r\n       <div class=\"fixed top-0 left-0 right-0 z-10 flex items-center justify-between p-8 h-20 shadow-md bg-gray-100 lg:ml-64\">\r\n\r\n        <div>\r\n            <h2 class=\"text-lg font-semibold\">Offer Management</h2>\r\n        </div>\r\n        <div>\r\n            <form action=\"#\" method=\"GET\">\r\n                <input type=\"text\" name=\"search\" placeholder=\"Search\" class=\"p-2 w-[500px] h-10 rounded bg-gray-200\">\r\n            </form>\r\n        </div>\r\n      </div>\r\n  \r\n    <!-- Add Offer Section -->\r\n    <div class=\"pt-24 pb-16\">\r\n      <button\r\n        id=\"add-category-btn\"\r\n        class=\"absolute right-8 top-24 px-4 py-2 bg-blue-800 text-white text-sm tracking-wider font-medium rounded hover:bg-blue-900\"\r\n      >\r\n        Add A New Offer\r\n      </button>\r\n  \r\n  \r\n  \r\n      <div class=\"font-sans overflow-x-auto ml- mr-8 mt-12\">\r\n        <table class=\"min-w-full bg-white\">\r\n          <thead class=\"bg-gray-200 whitespace-nowrap\">\r\n            <tr>\r\n                <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[5%]\">Sl</th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[10%]\">\r\n                Type\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[20%]\">\r\n                Title\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[20%]\">\r\n                Applicable\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[10%]\">\r\n                Discount\r\n              </th>\r\n              <th class=\"p-4  text-left text-xs font-bold text-gray-800 w-[10%]\">\r\n                Start Date\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[10%]\">\r\n                End Date\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[10%]\">\r\n                Status\r\n              </th>\r\n              <th class=\"p-4 text-left text-xs font-bold text-gray-800 w-[20%] text-center\">\r\n                Actions\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n    \r\n          <tbody class=\"whitespace-nowrap\">\r\n            \r\n            <% offers.forEach((offer, index) => { %>\r\n  \r\n              <tr class=\"hover:bg-gray-50\">\r\n                  <td class=\"p-4  text-[15px] text-gray-800 font-semibold\">\r\n                    <%= ((currentPage - 1) * limit) + index + 1 %>\r\n                   \r\n                  </td>\r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.offerType %>\r\n                  </td>\r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.title \r\n                          ? offer.title.split(' ').slice(0, 3).join(' ') + (offer.title.split(' ').length > 3 ? '...' : '') \r\n                          : 'No Title Available' %>\r\n                  </td>\r\n                  \r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.offerType === \"products\" \r\n                          ? (offer.applicableProduct && offer.applicableProduct.name) || \"No Product Name\"\r\n                          : (offer.applicableCategory && offer.applicableCategory.name) || \"No Category Name\" %>\r\n                  </td>\r\n                  \r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.discountPercentage %>\r\n                  </td>\r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.startDate ? offer.startDate.toISOString().split('T')[0] : 'N/A' %>\r\n                  </td>\r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                    <%= offer.endDate ? offer.endDate.toISOString().split('T')[0] : 'N/A' %>\r\n                  </td>\r\n                  \r\n                  <td class=\"p-4 text-[15px] text-gray-800 font-semibold \">\r\n                   <%= offer.isActive ? 'Active' : 'Inactive' %>\r\n                  </td>\r\n                  <td class=\"p-4 w-[30%]\">\r\n                    <button type=\"button\"\r\n                      class=\"block-unblock-btn w-[80px] py-2 rounded-lg text-white text-sm tracking-wider font-medium border border-current outline-none bg-<%= offer.isActive ? 'orange-700' : 'green-700' %> hover:bg-<%= offer.isActive ? 'orange-800' : 'green-800' %> active:bg-<%= offer.isActive ? 'orange-700' : 'green-700' %>\"\r\n                      data-offer-id=\"<%= offer._id %>\"\r\n                      data-blocked=\"<%= offer.isActive %>\" >\r\n                      <%= offer.isActive ? 'Block' : 'Unblock' %>\r\n                    </button>\r\n  \r\n                    <!-- Edit Button -->\r\n                    <button type=\"button\"\r\n                      class=\"edit-offer-btn w-[80px] py-2 text-white rounded-lg text-sm tracking-wider font-medium border border-current outline-none hover:bg-gray-600 bg-gray-500\"\r\n                      data-id=\"<%= offer._id %>\"\r\n                      data-title=\"<%= offer.title %>\"\r\n                      data-discount=\"<%= offer.discountPercentage %>\"\r\n                      data-offer-type=\"<%= offer.offerType %>\"\r\n                      data-applicable-product=\"<%= offer.applicableProduct ? offer.applicableProduct._id : '' %>\"\r\n                      data-applicable-category=\"<%= offer.applicableCategory ? offer.applicableCategory._id : '' %>\"\r\n                      data-start-date=\"<%= offer.startDate ? offer.startDate.toISOString().split('T')[0] : '' %>\"\r\n                      data-end-date=\"<%= offer.endDate ? offer.endDate.toISOString().split('T')[0] : '' %>\"\r\n                      data-is-active=\"<%= offer.isActive ? 'true' : 'false' %>\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  \r\n                      <button type=\"button\"\r\n                      class=\"delete-offer-btn w-[80px] py-2  text-white rounded-lg text-sm tracking-wider font-medium border border-current outline-none hover:bg-red-700 bg-red-600\"\r\n                      data-delete-offer-id=\"<%= offer._id %>\">\r\n                      \r\n                      Delete\r\n                      </button>\r\n                  </td>\r\n                  \r\n                </tr>\r\n  \r\n         <% }) %>\r\n          </tbody>\r\n        </table>\r\n    \r\n        <div class=\"mt-6 flex justify-center items-center px-8\">\r\n          <!-- Previous Button -->\r\n          <!-- <% if (currentPage > 1) { %>\r\n            <a href=\"?page=<%= currentPage - 1 %>&limit=<%= limit %>\" class=\"px-4 py-2 bg-gray-300 text-sm rounded hover:bg-gray-400\">Previous</a>\r\n          <% } else { %>\r\n            <span class=\"px-4 py-2 bg-gray-300 text-sm rounded opacity-50\">Previous</span>\r\n          <% } %> -->\r\n        \r\n          <!-- Page Numbers -->\r\n          <div class=\"flex space-x-2\">\r\n            <% for (let i = 1; i <= totalPages; i++) { %>\r\n              <% if (i === currentPage) { %>\r\n                <span class=\"px-4 py-2 bg-blue-500 text-white text-sm rounded\"><%= i %></span>\r\n              <% } else { %>\r\n                <a href=\"?page=<%= i %>&limit=<%= limit %>\" class=\"px-4 py-2 bg-gray-300 text-sm rounded hover:bg-gray-400\"><%= i %></a>\r\n              <% } %>\r\n            <% } %>\r\n          </div>\r\n        \r\n          <!-- Next Button -->\r\n          <!-- <% if (currentPage < totalPages) { %>\r\n            <a href=\"?page=<%= currentPage + 1 %>&limit=<%= limit %>\" class=\"px-4 py-2 bg-gray-300 text-sm rounded hover:bg-gray-400\">Next</a>\r\n          <% } else { %>\r\n            <span class=\"px-4 py-2 bg-gray-300 text-sm rounded opacity-50\">Next</span>\r\n          <% } %> -->\r\n        </div>\r\n      \r\n    \r\n        \r\n      </div>\r\n    </div>\r\n  \r\n  \r\n  \r\n    \r\n\r\n  \r\n  <!-- Add Offer Modal -->\r\n  \r\n  <div id=\"add-offer-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n    <div class=\"bg-white rounded-lg shadow-lg w-1/3 px-8 py-4\">\r\n      <h2 class=\"text-xl font-semibold mb-4\">Add New Offer</h2>\r\n      <form id=\"add-offer-form\">\r\n        <!-- Offer Title -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"title\" class=\"block font-medium mb-1\">Offer Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            placeholder=\"e.g., 10% Off on Beds\"\r\n            class=\"w-full p-2 border rounded\"\r\n          />\r\n          <span id=\"title-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Discount Percentage -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"discount\" class=\"block font-medium mb-1\">Discount Percentage</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"discount\"\r\n            name=\"discount\"\r\n            placeholder=\"e.g., 10\"\r\n            class=\"w-full p-2 border rounded\"\r\n            \r\n          />\r\n          <span id=\"discount-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Offer Type -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"offerType\" class=\"block font-medium mb-1\">Offer Type</label>\r\n          <select id=\"offerType\" name=\"offerType\" class=\"w-full p-2 border rounded\">\r\n            <option value=\"products\" selected>Product</option>\r\n            <option value=\"Category\">Category</option>\r\n          </select>\r\n          <span id=\"offerType-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Applicable Product -->\r\n        <div id=\"productSelect\" class=\"mb-4 relative\">\r\n          <label for=\"applicableProduct\" class=\"block font-medium mb-1\">Applicable Product</label>\r\n          <div class=\"w-full p-2 border rounded bg-white\">\r\n            <div id=\"dropdownButton\" class=\"cursor-pointer\">Select Product</div>\r\n            <div id=\"dropdownOptions\" class=\"hidden absolute z-10 w-full border bg-white shadow max-h-48 overflow-y-auto\">\r\n              <% products.forEach(product => { %>\r\n              <div class=\"p-2 hover:bg-blue-600 hover:text-white cursor-pointer\" data-value=\"<%= product._id %>\">\r\n                <%= product.name %>\r\n              </div>\r\n              <% }) %>\r\n            </div>\r\n          </div>\r\n          <input type=\"hidden\" id=\"applicableProduct\" name=\"applicableProduct\" />\r\n          <span id=\"applicableProduct-error\" class=\"text-red-500 text-sm hidden\">Please select a product.</span>\r\n        </div>\r\n  \r\n        <!-- Applicable Category -->\r\n        <div id=\"categorySelect\" class=\"mb-4 hidden\">\r\n          <label for=\"applicableCategory\" class=\"block font-medium mb-1\">Applicable Category</label>\r\n          <select id=\"applicableCategory\" name=\"applicableCategory\" class=\"w-full p-2 border rounded\">\r\n            <option value=\"\">Select Category</option>\r\n            <% categories.forEach(category => { %>\r\n            <option value=\"<%=category._id%>\"><%=category.name%></option>\r\n            <% }) %>\r\n          </select>\r\n          <span id=\"applicableCategory-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Start and End Dates -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"startDate\" class=\"block font-medium mb-1\">Start Date</label>\r\n          <input type=\"date\" id=\"startDate\" name=\"startDate\" class=\"w-full p-2 border rounded\" />\r\n          <span id=\"startDate-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n        <div class=\"mb-4\">\r\n          <label for=\"endDate\" class=\"block font-medium mb-1\">End Date</label>\r\n          <input type=\"date\" id=\"endDate\" name=\"endDate\" class=\"w-full p-2 border rounded\" />\r\n          <span id=\"endDate-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Status -->\r\n        <div class=\"mb-4 flex items-center\">\r\n          <input type=\"checkbox\" id=\"status\" name=\"status\" class=\"mr-2\" checked />\r\n          <label for=\"status\" class=\"font-medium\">Active</label>\r\n        </div>\r\n  \r\n        <!-- Action Buttons -->\r\n        <div class=\"flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            id=\"cancel-btn\"\r\n            class=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 mr-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"px-4 py-2 bg-blue-800 text-white rounded hover:bg-blue-900\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <!-- Edit Offer Modal -->\r\n  <div id=\"edit-offer-modal\" class=\"hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n    <div class=\"bg-white rounded-lg shadow-lg w-1/3 px-8 py-4\">\r\n      <h2 class=\"text-xl font-semibold mb-4\">Edit Offer</h2>\r\n      <form id=\"edit-offer-form\">\r\n        <!-- Offer Title -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"edit-title\" class=\"block font-medium mb-1\">Offer Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"edit-title\"\r\n            name=\"title\"\r\n            class=\"w-full p-2 border rounded\"\r\n          />\r\n          <span id=\"edit-title-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Discount Percentage -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"edit-discount\" class=\"block font-medium mb-1\">Discount Percentage</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"edit-discount\"\r\n            name=\"discount\"\r\n            class=\"w-full p-2 border rounded\"\r\n           \r\n          />\r\n          <span id=\"edit-discount-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Offer Type -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"edit-offerType\" class=\"block font-medium mb-1\">Offer Type</label>\r\n          <select id=\"edit-offerType\" name=\"offerType\" class=\"w-full p-2 border rounded\">\r\n            <option value=\"products\">Product</option>\r\n            <option value=\"Category\">Category</option>\r\n          </select>\r\n          <span id=\"edit-offerType-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Applicable Product -->\r\n        <div id=\"edit-productSelect\" class=\"mb-4\">\r\n          <label for=\"edit-applicableProduct\" class=\"block font-medium mb-1\">Applicable Product</label>\r\n          <select id=\"edit-applicableProduct\" name=\"applicableProduct\" class=\"w-full p-2 border rounded\">\r\n            <% products.forEach(product => { %>\r\n            <option value=\"<%= product._id %>\"><%= product.name %></option>\r\n            <% }) %>\r\n          </select>\r\n        </div>\r\n  \r\n        <!-- Applicable Category -->\r\n        <div id=\"edit-categorySelect\" class=\"mb-4 hidden\">\r\n          <label for=\"edit-applicableCategory\" class=\"block font-medium mb-1\">Applicable Category</label>\r\n          <select id=\"edit-applicableCategory\" name=\"applicableCategory\" class=\"w-full p-2 border rounded\">\r\n            <% categories.forEach(category => { %>\r\n            <option value=\"<%= category._id %>\"><%= category.name %></option>\r\n            <% }) %>      \r\n          </select>\r\n          <span id=\"edit-applicableCategory-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n   \r\n  \r\n        <!-- Start Date -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"edit-startDate\" class=\"block font-medium mb-1\">Start Date</label>\r\n          <input type=\"date\" id=\"edit-startDate\" name=\"startDate\" class=\"w-full p-2 border rounded\" />\r\n          <span id=\"edit-startDate-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- End Date -->\r\n        <div class=\"mb-4\">\r\n          <label for=\"edit-endDate\" class=\"block font-medium mb-1\">End Date</label>\r\n          <input type=\"date\" id=\"edit-endDate\" name=\"endDate\" class=\"w-full p-2 border rounded\" />\r\n          <span id=\"edit-endDate-error\" class=\"text-red-500 text-sm hidden\">This field is required.</span>\r\n        </div>\r\n  \r\n        <!-- Status -->\r\n        <div class=\"mb-4 flex items-center\">\r\n          <input type=\"checkbox\" id=\"edit-status\" name=\"status\" class=\"mr-2\" />\r\n          <label for=\"edit-status\" class=\"font-medium\">Active</label>\r\n        </div>\r\n  \r\n        <!-- Action Buttons -->\r\n        <div class=\"flex justify-end\">\r\n          <button\r\n            type=\"button\"\r\n            id=\"cancel-edit-btn\"\r\n            class=\"px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 mr-2\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            class=\"px-4 py-2 bg-blue-800 text-white rounded hover:bg-blue-900\"\r\n          >\r\n            Save Changes\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div>\r\n  \r\n  \r\n  <!-- Block & Unblock Modal -->\r\n  <div id=\"confirmation-modal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50\">\r\n    <div class=\"bg-white p-8 rounded-lg shadow-lg w-[400px]\">\r\n      <h2 class=\"text-xl font-semibold mb-4\">Confirm Action</h2>\r\n      <p id=\"modal-message\" class=\"mb-6 text-gray-700\">Are you sure you want to proceed?</p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button id=\"status-cancel-btn\" class=\"px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400\">Cancel</button>\r\n        <button id=\"confirm-btn\" class=\"px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-900\">Confirm</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  <!-- Delete Modal -->\r\n  <div id=\"delete-confirmation-modal\" class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50\">\r\n    <div class=\"bg-white p-8 rounded-lg shadow-lg w-[400px]\">\r\n      <h2 class=\"text-xl font-semibold mb-4\">Confirm Action</h2>\r\n      <p class=\"mb-6 text-gray-700\">Are you sure you want to delete this offer?</p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button id=\"delete-cancel-btn\" class=\"px-4 py-2 bg-gray-300 rounded-lg hover:bg-gray-400\">Cancel</button>\r\n        <button id=\"delete-confirm-btn\" class=\"px-4 py-2 bg-black text-white rounded-lg hover:bg-gray-900\">Confirm</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n    <!-- Tailwind CSS -->\r\n    <link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Font Family: Metropolis -->\r\n    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/metropolis/1.0.0/metropolis.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Font Awesome Icons -->\r\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\r\n\r\n    <!-- Google Fonts -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap\" rel=\"stylesheet\">\r\n\r\n    <!-- Cropper JS -->\r\n    <link href=\"https://unpkg.com/cropperjs/dist/cropper.min.css\" rel=\"stylesheet\">\r\n\r\n    <!-- Toastify  -->\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css\">\r\n       <!-- Tailwind CSS Script -->\r\n       <script src=\"https://cdn.tailwindcss.com\"></script>\r\n\r\n       <!-- SweetAlert -->\r\n       <script src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n   \r\n       <!-- Cropper JS -->\r\n       <script src=\"https://unpkg.com/cropperjs/dist/cropper.min.js\"></script> \r\n   \r\n       <!-- Toastify  -->\r\n       <script type=\"text/javascript\" src=\"https://cdn.jsdelivr.net/npm/toastify-js\"></script>\r\n  \r\n  \r\n  <script>\r\n  \r\n  document.querySelectorAll('.pagination-link').forEach(link => {\r\n      link.addEventListener('click', async (event) => {\r\n        event.preventDefault();\r\n        const url = event.target.href;\r\n  \r\n        try {\r\n          const response = await fetch(url);\r\n          const html = await response.text();\r\n  \r\n          // Replace the table and pagination controls with the new content\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(html, 'text/html');\r\n          const newTable = doc.querySelector('table');\r\n          const newPagination = doc.querySelector('.pagination-controls');\r\n  \r\n          document.querySelector('table').innerHTML = newTable.innerHTML;\r\n          document.querySelector('.pagination-controls').innerHTML = newPagination.innerHTML;\r\n        } catch (error) {\r\n          console.error('Error fetching new page:', error);\r\n        }\r\n      });\r\n    });\r\n  \r\n  \r\n  // ------------- Add Offer --------------\r\n  \r\n  \r\n  document.addEventListener('DOMContentLoaded', () => {\r\n          const today = new Date().toISOString().split('T')[0]; // Get today's date in 'YYYY-MM-DD' format\r\n          const startDateInput = document.getElementById('startDate');\r\n          const expiryDateInput = document.getElementById('endDate');\r\n  \r\n          // Set the minimum date for both inputs\r\n          startDateInput.min = today;\r\n          expiryDateInput.min = today;\r\n  \r\n          // Optional: Update the expiryDateInput.min whenever startDateInput changes\r\n          startDateInput.addEventListener('change', () => {\r\n              expiryDateInput.min = startDateInput.value; // Ensure expiry date is after or equal to start date\r\n          });\r\n      });\r\n  \r\n  \r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    // References\r\n    const addOfferBtn = document.getElementById('add-category-btn');\r\n    const addOfferModal = document.getElementById('add-offer-modal');\r\n    const cancelBtn = document.getElementById('cancel-btn');\r\n    const offerType = document.getElementById('offerType');\r\n    const productSelect = document.getElementById('productSelect');\r\n    const categorySelect = document.getElementById('categorySelect');\r\n    const dropdownButton = document.getElementById('dropdownButton');\r\n    const dropdownOptions = document.getElementById('dropdownOptions');\r\n    const hiddenInput = document.getElementById('applicableProduct');\r\n  \r\n  \r\n    // Error Elements\r\n    const titleError = document.getElementById('title-error');\r\n    const discountError = document.getElementById('discount-error');\r\n    const productError = document.getElementById('applicableProduct-error');\r\n    const categoryError = document.getElementById('applicableCategory-error');\r\n    const startDateError = document.getElementById('startDate-error');\r\n    const endDateError = document.getElementById('endDate-error');\r\n  \r\n    // Set default offer type as 'Product'\r\n    offerType.value = 'Product';\r\n    updateVisibility();\r\n  \r\n    // Show modal\r\n    addOfferBtn.addEventListener('click', () => {\r\n      addOfferModal.classList.remove('hidden');\r\n      updateVisibility();\r\n    });\r\n\r\n\r\n    // Hide modal\r\n    cancelBtn.addEventListener('click', () => {\r\n      addOfferModal.classList.add('hidden');\r\n      resetForm();\r\n    });\r\n  \r\n    function resetForm() {\r\n      titleError.classList.add('hidden');\r\n      discountError.classList.add('hidden');\r\n      productError.classList.add('hidden');\r\n      categoryError.classList.add('hidden');\r\n      startDateError.classList.add('hidden');\r\n      endDateError.classList.add('hidden');\r\n    }\r\n  \r\n    // Toggle product/category fields based on offer type\r\n    offerType.addEventListener('change', updateVisibility);\r\n  \r\n    function updateVisibility() {\r\n      if (offerType.value === 'products') {\r\n        productSelect.classList.remove('hidden');\r\n        categorySelect.classList.add('hidden');\r\n      } else {\r\n        categorySelect.classList.remove('hidden');\r\n        productSelect.classList.add('hidden');\r\n      }\r\n    }\r\n  \r\n    // Dropdown logic\r\n    dropdownButton.addEventListener('click', () => {\r\n      dropdownOptions.classList.toggle('hidden');\r\n    });\r\n  \r\n    dropdownOptions.addEventListener('click', (event) => {\r\n      const option = event.target.closest('[data-value]');\r\n      if (option) {\r\n        hiddenInput.value = option.getAttribute('data-value');\r\n        dropdownButton.textContent = option.textContent;\r\n        dropdownOptions.classList.add('hidden');\r\n      }\r\n    });\r\n  \r\n    document.addEventListener('click', (event) => {\r\n      if (!dropdownButton.contains(event.target) && !dropdownOptions.contains(event.target)) {\r\n        dropdownOptions.classList.add('hidden');\r\n      }\r\n    });\r\n  \r\n    // Form submission\r\n    const offerForm = document.getElementById('add-offer-form');\r\n    offerForm.addEventListener('submit', async (event) => {\r\n      event.preventDefault();\r\n      let isValid = true;\r\n      const formData = new FormData(offerForm);\r\n      const currentDate = new Date();\r\n  \r\n      // Clear all previous errors\r\n      document.querySelectorAll('.text-red-500').forEach(error => {\r\n        error.classList.add('hidden');\r\n      });\r\n  \r\n      // Validate form fields\r\n      if (!formData.get('title') || !formData.get('title').trim()) {\r\n      titleError.classList.remove('hidden');\r\n      isValid = false;\r\n      } else {\r\n          titleError.classList.add('hidden');\r\n      }\r\n  \r\n      if (!formData.get('discount')) {\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (parseFloat(formData.get('discount')) < 0 ) {\r\n        discountError.textContent = 'Discount should be between 0 and 50';\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (parseFloat(formData.get('discount')) > 50) {\r\n        discountError.textContent = 'Maximam offer is 50% of the product price is allowed.';\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else {\r\n        discountError.textContent = 'This field is required.'\r\n      }\r\n      if (!formData.get('offerType')) {\r\n        document.getElementById('offerType-error').classList.remove('hidden');\r\n        isValid = false;\r\n      }\r\n      if (offerType.value === 'products' && !formData.get('applicableProduct')) {\r\n        productError.classList.remove('hidden');\r\n        isValid = false;\r\n      }\r\n      if (offerType.value === 'Category' && !formData.get('applicableCategory')) {\r\n        categoryError.classList.remove('hidden');\r\n        isValid = false;\r\n      }\r\n      if (!formData.get('startDate')) {\r\n          startDateError.textContent = 'This field is required.';\r\n          startDateError.classList.remove('hidden');\r\n          isValid = false;\r\n      } else if (new Date(formData.get('startDate')).setHours(0, 0, 0, 0) < currentDate.setHours(0, 0, 0, 0)) {\r\n          startDateError.textContent = 'Start date must be today or in the future.';\r\n          startDateError.classList.remove('hidden');\r\n          isValid = false;\r\n      } else {\r\n          startDateError.classList.add('hidden');\r\n      }\r\n  \r\n      if (!formData.get('endDate')) {\r\n        endDateError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (new Date(formData.get('endDate')) <= new Date(formData.get('startDate'))) {\r\n        endDateError.textContent = 'End date must be later than the start date.';\r\n        endDateError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else {\r\n        endDateError.textContent = 'This field is required.';\r\n      }\r\n  \r\n      if (!isValid) return;\r\n      // If validation passes, submit form\r\n      const data = Object.fromEntries(formData);\r\n      data.isActive = formData.get('status') === 'on';\r\n      \r\n     \r\n      const response = await fetch('/admin/offer-management', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      if (response.ok) {\r\n      \r\n        Swal.fire({\r\n                          icon: 'success',\r\n                          title: 'Successfully Added!',\r\n                          text: 'Offer added successfully!',\r\n                          background: '#F8F9FA', \r\n                          color: '#333',\r\n                          timer: 2000,\r\n                          showConfirmButton: false\r\n                      });\r\n        setTimeout(() => {\r\n          location.reload();\r\n        }, 2000);\r\n      \r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.message}`);\r\n      }\r\n    });\r\n  });\r\n  \r\n  \r\n  // ---------- Edit Offer -----------\r\n  \r\n  \r\n  document.addEventListener('DOMContentLoaded', () => {\r\n          const today = new Date().toISOString().split('T')[0];\r\n          const startDateInput = document.getElementById('edit-startDate');\r\n          const expiryDateInput = document.getElementById('edit-endDate');\r\n  \r\n         \r\n          startDateInput.min = today;\r\n          expiryDateInput.min = today;\r\n  \r\n        \r\n          startDateInput.addEventListener('change', () => {\r\n              expiryDateInput.min = startDateInput.value; \r\n          });\r\n      });\r\n  \r\n  \r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    // Edit modal references\r\n    const editOfferModal = document.getElementById('edit-offer-modal');\r\n    const editOfferForm = document.getElementById('edit-offer-form');\r\n    const cancelEditBtn = document.getElementById('cancel-edit-btn');\r\n    const editOfferBtns = document.querySelectorAll('.edit-offer-btn');\r\n    let offerId;\r\n    // Populate and show edit modal\r\n    editOfferBtns.forEach(button => {\r\n      button.addEventListener('click', (event) => {\r\n        // Populate modal with offer data\r\n         offerId = event.target.getAttribute('data-id');\r\n        document.getElementById('edit-title').value = event.target.getAttribute('data-title');\r\n        document.getElementById('edit-discount').value = event.target.getAttribute('data-discount');\r\n        document.getElementById('edit-offerType').value = event.target.getAttribute('data-offer-type');\r\n        document.getElementById('edit-applicableProduct').value = event.target.getAttribute('data-applicable-product');\r\n        document.getElementById('edit-applicableCategory').value = event.target.getAttribute('data-applicable-category');\r\n        document.getElementById('edit-startDate').value = event.target.getAttribute('data-start-date');\r\n        document.getElementById('edit-endDate').value = event.target.getAttribute('data-end-date');\r\n        document.getElementById('edit-status').checked = event.target.getAttribute('data-is-active') === 'true';\r\n       \r\n        // Show the modal\r\n        editOfferModal.classList.remove('hidden');\r\n  \r\n        // Update offer type visibility\r\n        updateEditVisibility();\r\n      });\r\n    });\r\n  \r\n    // Close edit modal\r\n    cancelEditBtn.addEventListener('click', () => {\r\n      editOfferModal.classList.add('hidden');\r\n    });\r\n  \r\n    // Update visibility of product/category fields in edit modal\r\n    document.getElementById('edit-offerType').addEventListener('change', updateEditVisibility);\r\n  \r\n    function updateEditVisibility() {\r\n      const editOfferType = document.getElementById('edit-offerType').value;\r\n      if (editOfferType === 'products') {\r\n        document.getElementById('edit-productSelect').classList.remove('hidden');\r\n        document.getElementById('edit-categorySelect').classList.add('hidden');\r\n      } else {\r\n        document.getElementById('edit-categorySelect').classList.remove('hidden');\r\n        document.getElementById('edit-productSelect').classList.add('hidden');\r\n      }\r\n    }\r\n  \r\n    // Handle edit form submission\r\n    editOfferForm.addEventListener('submit', async (event) => {\r\n      event.preventDefault();\r\n  \r\n      let isValid = true;\r\n      const currentDate = new Date();\r\n      const formData = new FormData(editOfferForm);\r\n  \r\n        // Error Elements\r\n    const titleError = document.getElementById('edit-title-error');\r\n    const discountError = document.getElementById('edit-discount-error');\r\n    const categoryError = document.getElementById('edit-applicableCategory-error');\r\n    const startDateError = document.getElementById('edit-startDate-error');\r\n    const endDateError = document.getElementById('edit-endDate-error');\r\n  \r\n      // Clear all previous errors\r\n      document.querySelectorAll('.text-red-500').forEach(error => {\r\n        error.classList.add('hidden');\r\n      });\r\n  \r\n      // Validate form fields\r\n      if (!formData.get('title') || !formData.get('title').trim()) {\r\n      titleError.classList.remove('hidden');\r\n      isValid = false;\r\n      } else {\r\n          titleError.classList.add('hidden');\r\n      }\r\n  \r\n      if (!formData.get('discount')) {\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (parseFloat(formData.get('discount')) < 0 ) {\r\n        discountError.textContent = 'Discount should be between 0 and 50';\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (parseFloat(formData.get('discount')) > 50) {\r\n        discountError.textContent = 'Maximam offer is 50% of the product price is allowed.';\r\n        discountError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else {\r\n        discountError.textContent = 'This field is required.'\r\n      }\r\n      if (!formData.get('offerType')) {\r\n        document.getElementById('offerType-error').classList.remove('hidden');\r\n        isValid = false;\r\n      }\r\n      if (offerType.value === 'Category' && !formData.get('applicableCategory')) {\r\n        categoryError.classList.remove('hidden');\r\n        isValid = false;\r\n      }\r\n      if (!formData.get('startDate')) {\r\n          startDateError.textContent = 'This field is required.';\r\n          startDateError.classList.remove('hidden');\r\n          isValid = false;\r\n      } else if (new Date(formData.get('startDate')).setHours(0, 0, 0, 0) < currentDate.setHours(0, 0, 0, 0)) {\r\n          startDateError.textContent = 'Start date must be today or in the future.';\r\n          startDateError.classList.remove('hidden');\r\n          isValid = false;\r\n      } else {\r\n          startDateError.classList.add('hidden');\r\n      }\r\n  \r\n      if (!formData.get('endDate')) {\r\n        endDateError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else if (new Date(formData.get('endDate')) <= new Date(formData.get('startDate'))) {\r\n        endDateError.textContent = 'End date must be later than the start date.';\r\n        endDateError.classList.remove('hidden');\r\n        isValid = false;\r\n      } else {\r\n        endDateError.textContent = 'This field is required.';\r\n      }\r\n  \r\n      if (!isValid) return;\r\n  \r\n      const data = Object.fromEntries(formData);\r\n      data.isActive = formData.get('status') === 'on';\r\n  \r\n      // const offerId = document.querySelector('.edit-offer-btn[data-id]').getAttribute('data-id');\r\n      console.log(offerId)\r\n  \r\n      const response = await fetch(`/admin/offer-management/${offerId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(data),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        editOfferModal.classList.add('hidden');\r\n        Swal.fire({\r\n                          icon: 'success',\r\n                          title: 'Successfully Updated!',\r\n                          text: 'Offer updated successfully!',\r\n                          background: '#F8F9FA', \r\n                          color: '#333',\r\n                          timer: 2000,\r\n                          showConfirmButton: false\r\n                      });\r\n        setTimeout(() => {\r\n          location.reload();\r\n        }, 2000);\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Error: ${error.message}`);\r\n      }\r\n    });\r\n  });\r\n  \r\n  \r\n  // ------------ Change Status ---------------\r\n  \r\n  \r\n  \r\n  \r\n  // Handle block Unblock\r\n  document.querySelectorAll('.block-unblock-btn').forEach(button => {\r\n      button.addEventListener('click', (event) => {\r\n        const offerId = event.target.getAttribute('data-offer-id');\r\n        const isBlocked = event.target.getAttribute('data-blocked') === 'true';\r\n        const modalMessage = document.getElementById('modal-message');\r\n        \r\n        // Show confirmation modal\r\n        const modal = document.getElementById('confirmation-modal');\r\n        modal.classList.remove('hidden');\r\n  \r\n        // Set the modal message dynamically\r\n        modalMessage.textContent = isBlocked\r\n          ? 'Are you sure you want to block this offer?'\r\n          : 'Are you sure you want to Unblock this offer?';\r\n  \r\n        // Handle cancel button click\r\n        document.getElementById('status-cancel-btn').addEventListener('click', () => {\r\n         \r\n          modal.classList.add('hidden');\r\n        });\r\n  \r\n        // Handle confirm button click\r\n        document.getElementById('confirm-btn').onclick = async function() {\r\n          try {\r\n            const response = await fetch(`/admin/offer/${offerId}/block`, {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({ status: !isBlocked })  // Send category status to the server\r\n            });\r\n  \r\n            if (response.ok) {\r\n              // Update the button UI based on the new status\r\n              event.target.textContent = isBlocked ? 'Unblock' : 'Block';  // Update button text\r\n              event.target.setAttribute('data-blocked', !isBlocked);  // Update button's data-blocked attribute\r\n              \r\n              // Toggle the button color between block/unblock states\r\n              event.target.classList.toggle('bg-green-700', isBlocked);\r\n              event.target.classList.toggle('bg-orange-700', !isBlocked);\r\n              event.target.classList.toggle('hover:bg-green-800', isBlocked);\r\n              event.target.classList.toggle('hover:bg-orange-800', !isBlocked);\r\n  \r\n              // Close the confirmation modal\r\n              modal.classList.add('hidden');\r\n  \r\n              // Optionally, update the category status in the table without refreshing the page\r\n              const statusCell = event.target.closest('tr').querySelector('td:nth-child(8)');\r\n              statusCell.textContent = isBlocked ? 'Inactive' : 'Active';\r\n  \r\n              Toastify({\r\n                          text: 'Offer status changed successfully',\r\n                          duration: 3000,\r\n                          gravity: \"bottom\", // `top` or `bottom`\r\n                          position: \"left\", // `left`, `center` or `right`\r\n                          stopOnFocus: true, // Prevents dismissing of toast on hover\r\n                          style: {\r\n                              background: \"linear-gradient(to right, #00b09b, #96c93d)\",\r\n                          },\r\n                          }).showToast();\r\n         \r\n  \r\n            } else {\r\n              console.error('Failed to update offer status');\r\n            }\r\n          } catch (error) {\r\n            console.error('Error:', error);\r\n          }\r\n        };\r\n      });\r\n  });\r\n  \r\n  \r\n  \r\n  // ------------- Delete Offer --------------\r\n  \r\n  document.querySelectorAll('.delete-offer-btn').forEach(button => {\r\n    button.addEventListener('click', (event) => {\r\n      \r\n      const offerId = event.target.getAttribute('data-delete-offer-id');\r\n      const modal = document.getElementById('delete-confirmation-modal');\r\n      modal.classList.remove('hidden');\r\n  \r\n      document.getElementById('delete-cancel-btn').addEventListener('click', () => {\r\n        modal.classList.add('hidden');\r\n      });\r\n  \r\n      document.getElementById('delete-confirm-btn').addEventListener('click', async () => {\r\n        \r\n        try {\r\n          const response = await fetch(`/admin/offer-management/${offerId}`, {\r\n            method: 'DELETE'\r\n          });\r\n  \r\n          if(response.ok) {\r\n            window.location.reload();\r\n          } else {\r\n            Toastify({\r\n                          text: 'Failed to delete offer',\r\n                          duration: 3000,\r\n                          gravity: \"bottom\", // `top` or `bottom`\r\n                          position: \"center\", // `left`, `center` or `right`\r\n                          stopOnFocus: true, // Prevents dismissing of toast on hover\r\n                          style: {\r\n                              background: \"linear-gradient(to right, #ff4e50, #f44336)\",\r\n                          },\r\n                          onClick: function(){} // Callback after click\r\n                          }).showToast();\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      });\r\n      \r\n    });\r\n  });\r\n  \r\n  </script>\r\n  \r\n  <style>\r\n    #applicableProduct {\r\n      max-height: 200px;\r\n      overflow-y: auto;\r\n    }\r\n  </style>\r\n"
        }
    ]
}