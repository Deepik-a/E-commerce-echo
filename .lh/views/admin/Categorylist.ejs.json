{
    "sourceFile": "views/admin/Categorylist.ejs",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736751083082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736751083082,
            "name": "Commit-0",
            "content": "<%- include('sidebar') %>\r\n     \r\n\r\n  <title>Category Management</title>\r\n  <style>\r\n    /* Base styles */\r\n    body {\r\n      margin: 0;\r\n      padding: 0;\r\n      font-family: system-ui, -apple-system, sans-serif;\r\n      background: #f8f9fa;\r\n    }\r\n\r\n    /* Main content wrapper */\r\n    .main-content {\r\n      margin-left: 256px; /* Width of sidebar */\r\n      padding: 20px;\r\n      transition: margin-left 0.3s ease;\r\n    }\r\n\r\n    /* Category table styles */\r\n    .category-table {\r\n      background: white;\r\n      border-radius: 8px;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n      width: 100%;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .category-header {\r\n      background: #f8f9fa;\r\n      padding: 1.5rem;\r\n      border-bottom: 2px solid #dee2e6;\r\n      border-radius: 8px 8px 0 0;\r\n    }\r\n\r\n    .category-header h5 {\r\n      margin: 0;\r\n      font-size: 1.25rem;\r\n      color: #333;\r\n    }\r\n\r\n    .table-responsive {\r\n      padding: 1rem;\r\n      overflow-x: auto;\r\n    }\r\n\r\n    table {\r\n      width: 100%;\r\n      border-collapse: collapse;\r\n    }\r\n\r\n    th, td {\r\n      padding: 1rem;\r\n      text-align: left;\r\n    }\r\n\r\n    th {\r\n      background: #f8f9fa;\r\n      font-weight: 600;\r\n      color: #555;\r\n    }\r\n\r\n    /* Form styles */\r\n    .edit-category-form {\r\n      max-width: 250px;\r\n    }\r\n\r\n    .form-control {\r\n      width: 100%;\r\n      padding: 0.5rem;\r\n      margin: 0.5rem 0;\r\n      border: 1px solid #dee2e6;\r\n      border-radius: 4px;\r\n    }\r\n\r\n    /* Button styles */\r\n    .btn {\r\n      padding: 0.5rem 1rem;\r\n      border-radius: 4px;\r\n      border: none;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .btn-primary {\r\n      background: #0d6efd;\r\n      color: white;\r\n    }\r\n\r\n    .block-unblock-btn {\r\n      padding: 0.5rem 1rem;\r\n      border: none;\r\n      border-radius: 4px;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n    }\r\n\r\n    .btn-danger {\r\n      background-color: #dc3545;\r\n      color: white;\r\n    }\r\n\r\n    .btn-success {\r\n      background-color: #198754;\r\n      color: white;\r\n    }\r\n\r\n    /* Badge styles */\r\n    .badge {\r\n      padding: 0.5em 0.8em;\r\n      border-radius: 4px;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .bg-danger {\r\n      background-color: #dc3545;\r\n      color: white;\r\n    }\r\n\r\n    .bg-success {\r\n      background-color: #198754;\r\n      color: white;\r\n    }\r\n\r\n    /* Responsive styles */\r\n    @media (max-width: 1024px) {\r\n      .main-content {\r\n        margin-left: 0;\r\n        padding: 60px 15px 15px; /* Added top padding for toggle button */\r\n      }\r\n\r\n      .table-responsive {\r\n        border: 0;\r\n      }\r\n      \r\n      table, thead, tbody, th, td, tr {\r\n        display: block;\r\n      }\r\n      \r\n      thead tr {\r\n        position: absolute;\r\n        top: -9999px;\r\n        left: -9999px;\r\n      }\r\n      \r\n      tr {\r\n        border: 1px solid #dee2e6;\r\n        margin-bottom: 1rem;\r\n        border-radius: 4px;\r\n        background: white;\r\n        padding: 0.5rem;\r\n      }\r\n      \r\n      td {\r\n        border: none;\r\n        position: relative;\r\n        padding: 0.5rem;\r\n        padding-left: 130px;\r\n        min-height: 30px;\r\n        margin-bottom: 0.5rem;\r\n      }\r\n      \r\n      td:before {\r\n        content: attr(data-label);\r\n        position: absolute;\r\n        left: 0.5rem;\r\n        width: 120px;\r\n        font-weight: bold;\r\n        text-align: left;\r\n      }\r\n      \r\n      .edit-category-form {\r\n        max-width: 100%;\r\n      }\r\n\r\n      .block-unblock-btn {\r\n        width: 100%;\r\n        margin-top: 0.5rem;\r\n      }\r\n    }\r\n\r\n\r\n\r\n  </style>\r\n\r\n\r\n\r\n  <div class=\"main-content\">\r\n    <div class=\"category-table\">\r\n      <div class=\"category-header\">\r\n        <h5>Category Management</h5>\r\n      </div>\r\n      <div class=\"table-responsive\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th width=\"5%\">#</th>\r\n              <th width=\"20%\">Category Name</th>\r\n              <th width=\"15%\">Status</th>\r\n              <th width=\"35%\">Edit</th>\r\n              <th width=\"25%\">List/Unlist</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <% categories.forEach((category, index) => { %>\r\n              <tr>\r\n                <td data-label=\"#\">\r\n                  <%= index + 1 %>\r\n                </td>\r\n                <td data-label=\"Category Name\">\r\n                  <%= category.name %>\r\n                </td>\r\n                <td data-label=\"Status\">\r\n                  <span class=\"badge <%= category.isDeleted ? 'bg-danger' : 'bg-success' %>\">\r\n                    <%= category.isDeleted ? 'Blocked' : 'Active' %>\r\n                  </span>\r\n                </td>\r\n                <td data-label=\"Edit\">\r\n                  <form class=\"edit-category-form\" data-id=\"<%= category._id %>\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"categoryName-<%= category._id %>\">Edit Category Name</label>\r\n                      <input type=\"text\" \r\n                             id=\"categoryName-<%= category._id %>\" \r\n                             name=\"name\" \r\n                             value=\"<%= category.name %>\" \r\n                           ma\r\n                             class=\"form-control\">\r\n                      <button type=\"submit\" class=\"btn btn-primary\">Update Category</button>\r\n                    </div>\r\n                  </form>\r\n                </td>\r\n                <td data-label=\"List/Unlist\">\r\n                  <button \r\n                    class=\"block-unblock-btn <%= category.isDeleted ? 'btn-success' : 'btn-danger' %>\"\r\n                    data-id=\"<%= category._id %>\" \r\n                    data-action=\"<%= category.isDeleted ? 'unblock' : 'block' %>\">\r\n                    <%= category.isDeleted ? 'Unblock' : 'Block' %>\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            <% }) %>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n \r\n\r\n    \r\n       <!-- Pagination for the page -->\r\n    <nav aria-label=\"Page navigation\" class=\"d-flex justify-content-center mt-4\">\r\n      <ul class=\"pagination\">\r\n        <!-- Previous Button -->\r\n        <li class=\"page-item <%= currentPage === 1 ? 'disabled' : '' %>\">\r\n          <a class=\"page-link\" href=\"?page=<%= currentPage - 1 %>&limit=3\" tabindex=\"-1\">Previous</a>\r\n        </li>\r\n    \r\n        <!-- Page Numbers -->\r\n        <% for (let i = 1; i <= totalPages; i++) { %>\r\n          <li class=\"page-item <%= currentPage === i ? 'active' : '' %>\">\r\n            <a class=\"page-link\" href=\"?page=<%= i %>&limit=3\"><%= i %></a>\r\n          </li>\r\n        <% } %>\r\n    \r\n        <!-- Next Button -->\r\n        <li class=\"page-item <%= currentPage === totalPages ? 'disabled' : '' %>\">\r\n          <a class=\"page-link\" href=\"?page=<%= currentPage + 1 %>&limit=3\">Next</a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <script>\r\n      // Reusable function for SweetAlert success\r\n      function showSuccessAlert(title, message, reload = false) {\r\n          Swal.fire({\r\n              icon: 'success',\r\n              title: title,\r\n              text: message,\r\n              showConfirmButton: true,\r\n          }).then(() => {\r\n              if (reload) location.reload();\r\n          });\r\n      }\r\n  \r\n      // Reusable function for SweetAlert error\r\n      function showErrorAlert(message) {\r\n          Swal.fire({\r\n              icon: 'error',\r\n              title: 'Error',\r\n              text: message,\r\n              showConfirmButton: true,\r\n          });\r\n      }\r\n  \r\n   \r\n     \r\n  \r\n    // Handle Edit Category form submission\r\ndocument.querySelectorAll('.edit-category-form').forEach(form => {\r\n    form.addEventListener('submit', async function (e) {\r\n        e.preventDefault();\r\n\r\n        const categoryId = this.dataset.id;\r\n        const name = this.querySelector(`input[name=\"name\"]`).value.trim();\r\n\r\n        // Client-side validation before making the API call\r\n        if (!name) {\r\n            showErrorAlert('Category name cannot be empty!');\r\n            return;\r\n        }\r\n\r\n        if (/^\\d+$/.test(name)) {\r\n            showErrorAlert('Category name cannot contain only numbers!');\r\n            return;\r\n        }\r\n\r\n        if (/[^a-zA-Z0-9\\s-]/.test(name)) {\r\n            showErrorAlert('Category name contains invalid characters!');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`/admin/editCategory/${categoryId}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ name }),\r\n            });\r\n\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                showSuccessAlert('Category Updated', `The category name has been updated to \"${name}\".`, true);\r\n            } else {\r\n                // Handle backend error messages like duplicate names\r\n                showErrorAlert(result.message || 'Failed to update category');\r\n            }\r\n        } catch (error) {\r\n            showErrorAlert(error.message || 'An unexpected error occurred');\r\n        }\r\n    });\r\n});\r\n\r\n// Helper functions for showing alerts\r\nfunction showSuccessAlert(title, text, reload = false) {\r\n    Swal.fire({\r\n        icon: 'success',\r\n        title: title,\r\n        text: text,\r\n    }).then(() => {\r\n        if (reload) {\r\n            window.location.reload();\r\n        }\r\n    });\r\n}\r\n\r\nfunction showErrorAlert(message) {\r\n    Swal.fire({\r\n        icon: 'error',\r\n        title: 'Error',\r\n        text: message,\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       // Handle Block/Unblock functionality\r\n // Handle Block/Unblock functionality\r\ndocument.querySelectorAll('.block-unblock-btn').forEach(button => {\r\n    button.addEventListener('click', async (e) => {\r\n        const categoryId = e.target.getAttribute('data-id');\r\n        const action = e.target.getAttribute('data-action'); // 'block' or 'unblock'\r\n\r\n        // Show confirmation dialog\r\n        const result = await Swal.fire({\r\n            title: `Are you sure you want to ${action} this category?`,\r\n            text: `This action will ${action} the category and it will ${action === 'block' ? 'no longer be accessible' : 'become accessible again.'}`,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: action === 'block' ? '#d33' : '#3085d6',\r\n            cancelButtonColor: '#aaa',\r\n            confirmButtonText: action === 'block' ? 'Yes, Block it!' : 'Yes, Unblock it!',\r\n            cancelButtonText: 'Cancel',\r\n        });\r\n\r\n        if (result.isConfirmed) {\r\n            try {\r\n                const response = await fetch(`/admin/categories/${categoryId}/${action}`, {\r\n                    method: 'POST',\r\n                });\r\n\r\n                const result = await response.json();\r\n                console.log('Response Data:', result);\r\n\r\n                if (response.ok) {\r\n                    // Show success alert\r\n                    Swal.fire({\r\n                        title: action === 'block' ? 'Blocked!' : 'Unblocked!',\r\n                        text: `Category has been ${action}ed successfully.`,\r\n                        icon: 'success',\r\n                        confirmButtonText: 'OK'\r\n                    }).then(() => {\r\n                        // Reload the page to reflect the change\r\n                        window.location.reload();\r\n                    });\r\n                } else {\r\n                    // Show error alert\r\n                    Swal.fire({\r\n                        title: 'Error',\r\n                        text: result.message || 'Something went wrong!',\r\n                        icon: 'error',\r\n                        confirmButtonText: 'OK'\r\n                    });\r\n                }\r\n            } catch (error) {\r\n                // Handle fetch error\r\n                Swal.fire({\r\n                    title: 'Error',\r\n                    text: 'Could not complete the request.',\r\n                    icon: 'error',\r\n                    confirmButtonText: 'OK'\r\n                });\r\n            }\r\n        } else {\r\n            // If canceled, do nothing\r\n            console.log('Action canceled by user.');\r\n        }\r\n    });\r\n});\r\n\r\n  </script>\r\n  \r\n"
        }
    ]
}