{
    "sourceFile": "middleware/multer.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736721275326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736721275326,
            "name": "Commit-0",
            "content": "const multer = require('multer');\r\nconst path = require('path');\r\n\r\nconst storage = multer.diskStorage({\r\n    destination: function (req, file, cb) {\r\n        cb(null, path.join(__dirname, '../uploads'));\r\n    },\r\n    filename: function (req, file, cb) {\r\n        const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\r\n        cb(null, uniqueSuffix + `-${file.originalname}`);\r\n    }\r\n});\r\n\r\nconst uploads = multer({\r\n    storage: storage,\r\n    limits: { fileSize: 5 * 1024 * 1024 }, // 5MB size limit\r\n    fileFilter: (req, file, cb) => {\r\n        const filetypes = /jpeg|jpg|png|gif/; // Allowed file types\r\n        const mimetype = filetypes.test(file.mimetype);\r\n        const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\r\n\r\n        if (mimetype && extname) {\r\n            return cb(null, true);\r\n        }\r\n        cb(null, false); // Instead of throwing an error, reject the file\r\n    }\r\n});\r\n\r\n// Multer upload handler (limit 3 files)\r\nconst multerUpload = uploads.array('newImages', 10);\r\n\r\nmodule.exports = multerUpload;\r\n\r\n"
        }
    ]
}