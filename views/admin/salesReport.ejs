
<%- include('sidebar.ejs') %>

  <title>Sales Report</title>

  
  <style>
    /* Base styles */
    body {
      margin: 0;
      font-family: 'Montserrat', 'Arial', sans-serif;
      font-weight: 700;
      background-color: #f3f4f6;
    }

  

    /* Main content styles */
    .main-content {
      margin-left: 256px;
      transition: margin-left 0.3s ease;
      min-height: 100vh;
      background-color: #f3f4f6;
    }

 

    /* Stats cards */
    .stats-card {
      background-color: #e6f3ff;
      padding: 1.25rem;
      border-radius: 0.5rem;
      flex: 1;
      text-align: center;
      transition: background-color 0.3s;
    }

    .stats-card:hover {
      background-color: #bfdbfe;
    }

    /* Table styles */
    .table-container {
      background-color: white;
      border-radius: 0.5rem;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
      overflow-x: auto;
    }

    /* Responsive styles */
    @media (max-width: 1024px) {
      .sidebar {
        transform: translateX(-100%);
      }
      
      .sidebar.active {
        transform: translateX(0);
      }

      .main-content {
        margin-left: 0;
      }

      .toggle-btn {
        display: block;
      }

      .stats-container {
        flex-direction: column;
      }

      .stats-card {
        margin-bottom: 1rem;
      }
    }
  </style>



  <div class="main-content">
    <div class="container mx-auto px-4 py-8">
      <div class="mb-6">
        <div class="flex flex-wrap justify-between items-center mb-6">
          <h1 style="font-size: 1.5rem; font-weight: 600; color: #1f2937;">Sales Report</h1>
          
          <div class="flex flex-wrap gap-4 mt-4 sm:mt-0">
            <select id="filterOption" style="padding: 0.5rem 1rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: white;">
              <option value="">Filter</option>
              <option value="day">This Day</option>
              <option value="week">This Week</option>
              <option value="month">This Month</option>
              <option value="year">This Year</option>
            </select>
            
            <select id="export" style="padding: 0.5rem 1rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: white;">
              <option value="">Export Report</option>
              <option value="excel">Excel Sheet</option>
              <option value="pdf">PDF</option>
            </select>
          </div>
        </div>
      </div>

      <div class="flex flex-wrap gap-4 my-6">
        <div class="stats-card">
          <span style="font-size: 0.75rem; text-transform: uppercase; color: #6b7280;">Overall Sales Count</span>
          <span id="overallSalesCount" style="display: block; font-size: 1.5rem; font-weight: 600; margin-top: 0.25rem;"><%= overallSalesCount %></span>
        </div>
        
        <div class="stats-card">
          <span style="font-size: 0.75rem; text-transform: uppercase; color: #6b7280;">Overall Order Amount</span>
          <span id="overallOrderAmount" style="display: block; font-size: 1.5rem; font-weight: 600; margin-top: 0.25rem;">₹ <%= overallOrderAmount.toFixed(2) %></span>
        </div>
        
        <div class="stats-card">
          <span style="font-size: 0.75rem; text-transform: uppercase; color: #6b7280;">Overall Coupon Discount</span>
          <span id="totalCouponDiscount" style="display: block; font-size: 1.5rem; font-weight: 600; margin-top: 0.25rem;">₹ <%= totalCouponDiscount.toFixed(2) %></span>
        </div>
      </div>

      <div class="table-container">
        <table style="min-width: 100%; border-collapse: separate; border-spacing: 0;">
          <thead style="background-color: #f9fafb;">
            <tr>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Order ID</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">User ID</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Order Date</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Order Amount</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Coupon Deduction</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Payment Status</th>
              <th style="padding: 0.75rem 1.5rem; text-align: left; font-size: 0.75rem; font-weight: 500; color: #6b7280; text-transform: uppercase;">Payment Method</th>
            </tr>
          </thead>
          <tbody>
            <% data.forEach(data =>{ %>
            <tr style="border-bottom: 1px solid #e5e7eb;">
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;"><%= data.orderId %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;"><%= data.userId.toString().substring(0, 4) + '...' + data.userId.toString().slice(-5) %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;"><%= new Date(data.createdAt).toLocaleDateString('en-GB') %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;">₹ <%= data.payableAmount.toFixed(2) %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;">₹ <%= data.couponDiscount.toFixed(2) %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;"><%= data.paymentStatus %></td>
              <td style="padding: 1rem 1.5rem; font-size: 0.875rem; color: #4b5563;"><%= data.paymentMethod %></td>
            </tr>
            <% }) %>
          </tbody>
        </table>
      </div>

      <div class="flex flex-wrap justify-between items-center mt-6">
        <div style="font-size: 0.875rem; color: #4b5563;">
          Showing <span style="font-weight: 500;" id="currentPage"><%= currentPage %></span> to 
          <span style="font-weight: 500;" id="totalPages"><%= totalPages %></span> of 
          <span style="font-weight: 500;" id="totalRecords"><%= totalRecordsCount %></span> results
        </div>
        <div class="flex gap-2 mt-4 sm:mt-0">
          <button id="prevPage" style="padding: 0.5rem 1rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: white; color: #4b5563;">
            Previous
          </button>
          <button id="nextPage" style="padding: 0.5rem 1rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: white; color: #4b5563;">
            Next
          </button>
        </div>
      </div>
    </div>
  </div>





    <script>
     let currentPage = parseInt(document.getElementById('currentPage').innerHTML);
      let totalPages = parseInt(document.getElementById('totalPages').innerHTML);
      let overallSalesCount = document.getElementById('overallSalesCount');
      let overallOrderAmount = document.getElementById('overallOrderAmount');
      let totalCouponDiscount = document.getElementById('totalCouponDiscount');
    
      
      
    
    
      console.log("current ", currentPage);
      console.log("Total ", totalPages);
      
    
      // Fetch Sales Report
      function fetchSalesReport(page, filterOption = '') {
        console.log("page in fetchSalesReport = ",page);
        
        const URL = `/admin/salesReport?page=${page}&filter=${filterOption}`;
    
        fetch(URL, {
          headers: {
            'Accept': 'application/json',
          },
        })
        .then(response => {
          if (!response.ok) {
            throw new Error(`Server error: ${response.status}`);
          }
          return response.json();
        })
        .then(data => {
          console.log(data)
          overallSalesCount.innerHTML = ''
          overallSalesCount.innerHTML = data.overallSalesCount
          overallOrderAmount.innerHTML = ''
          overallOrderAmount.innerHTML = `₹${data.overallOrderAmount.toFixed(2)}`;
          totalCouponDiscount.innerHTML = ''
          totalCouponDiscount.innerHTML = `₹${data.totalCouponDiscount.toFixed(2)}`;
          
          
    
          updateReportTable(data.data);
          updatePagination(data.currentPage, data.totalPages, data.totalRecordsCount);
        })
        .catch(error => console.error('Error fetching sales report:', error));
      }
    
      // Event listener for Filter dropdown
      document.getElementById('filterOption').addEventListener('change', function (event) {
        const selectedFilter = event.target.value;
        
        fetchSalesReport(1, selectedFilter);
      });
    
      // Update the table rows
      function updateReportTable(data) {
        const tBody = document.querySelector('tbody');
        tBody.innerHTML = '';  // Clear previous rows
    
        data.forEach(order => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td class="px-6 py-4 text-lg text-gray-600">${order.orderId}</td>
            <td class="px-6 py-4 text-lg text-gray-600">${order.userId.substring(0, 4) + '...' + order.userId.slice(-5)}</td>
            <td class="px-6 py-4 text-lg text-gray-600">${new Date(order.createdAt).toLocaleDateString('en-GB')}</td>
            <td class="px-6 py-4 text-lg text-gray-600">₹${order.payableAmount.toFixed(2)}</td>
            <td class="px-6 py-4 text-lg text-gray-600">₹${order.couponDiscount.toFixed(2)}</td>
          <td class="px-6 py-4 text-lg text-gray-600">${order.paymentStatus}</td>

            <td class="px-6 py-4 text-lg text-gray-600">${order.paymentMethod}</td>
         
          `;
          tBody.appendChild(row);
        });
      }
    
      // Update pagination buttons and info
      function updatePagination(current, total, totalRecords) {
        currentPage = current;
        totalPages = total;
    
        document.getElementById('currentPage').innerText = current;
        document.getElementById('totalPages').innerText = total;
        document.getElementById('totalRecords').innerText = totalRecords;
    
        document.getElementById('prevPage').disabled = currentPage === 1;
        document.getElementById('nextPage').disabled = currentPage === totalPages;
      }
    
      document.getElementById('prevPage').addEventListener('click', function () {
        if (currentPage > 1) {
          fetchSalesReport(currentPage - 1);
        }
      });
    
      document.getElementById('nextPage').addEventListener('click', function () {
        console.log("Ima next");
        console.log("tottal pages = ",totalPages);
        console.log("currentPage page = ",currentPage);
        
        
        
        if (currentPage < totalPages) {
          fetchSalesReport(currentPage + 1);
        }
      });
    
    
      
    //--------------Report generation -------------------
    
    document.getElementById('export').addEventListener('change',function(event){
        const selectedExport = event.target.value;
    
        if(selectedExport){
            const filterOption = document.getElementById('filterOption').value;
    
           exportReport(selectedExport,filterOption)
            
    
        }
    })
    
    
    function exportReport(format,filterOption){
    
    
        const URL = `/admin/exportReport?format=${format}&filter=${filterOption}`
    
        fetch(URL,{
            headers:{
                'Accept':'application/json'
            }
        })
        .then(response=>response.blob())
        .then(blob=>{
    
            const url = window.URL.createObjectURL(blob); // Blob object, representing binary data like a file.
            const a = document.createElement('a');
            a.href = url
    
            //file name
    
            a.download = `sales_report.${format === 'excel' ? 'xlsx' : 'pdf'}`;
    
            document.body.appendChild(a)
            a.click();
            a.remove();
         
    
        })
        .catch(error=>console.error('Error exporting report:', error))
    
    
    }
    
    
    
    
    
    
    
    
    
    
    </script>
