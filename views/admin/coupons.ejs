

<%- include('sidebar') %>

<style>
    .category {
        width: 85%;
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-left: 50px; 
    }

    .search-container {
        border-radius: 10px;
        margin: 24px;
        background: #2b7aaf;
        width: 95%;
    }

    .coupon-action a {
        text-decoration: none;
    }

    .modal-content {
        background: #b4dfee;
        color: #101feb;
    }

    .form-control {
        background: #9cd6e7;
        color: #2d08b4;
        width: 100%;
    }

    .form-control::placeholder {
        color: #1132d6;
    }

    .form-control:focus {
        background: #a0d3e9;
        color: #330fe5;
    }

    .table tbody tr td {
        padding: 18px 0px;
        text-align: left;
        background: #9ed7e7;
        color: #0a0df1;
       
    }
    
    .table-container {
        padding-left: 30px; /* Adds padding inside the container */
        margin-left: 230px; /* Adds margin outside the container */
        width: calc(100% - 30px); /* Ensures proper alignment if width is an issue */
    }

    .table {
        margin-left: 0; /* Reset margin if necessary */
    }
    #formatCategory{
        padding-left: 30px; /* Adds padding inside the container */
        margin-left: 150px; /* Adds margin outside the container */
        width: calc(100% - 30px); /* Ensures proper alignment if width is an issue */   
    }
</style>




      <!------------------------------------- Coupon page Header -------------------------------------------------------->
<div class="col-12 category" id="formatCategory">
    <div class="search-container d-flex justify-content-between align-items-center gap-2 p-3">
        <div class="d-flex align-items-center gap-3">
            <h2 class="text-white mx-5">
                <%= title %>
            </h2>
            <form action="/admin/coupons" method="get" class="form d-flex align-items-center">
                <input type="text" name="search" placeholder="Search" class="form-input form-control me-2">
                <input type="submit" class="btn btn-primary" value="Search">
            </form>
        </div>
        <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addCollection">
            Add Coupon
        </button>
    </div>
</div>



            <!----------------------------------------- category table --------------------------------------------------->
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr scope="row" class="product-table-head">
                            <th scope="col" class="product-table-first">SL.No</th>
                            <th scope="col">Coupon Code</th>
                            <th scope="col">Discount Type</th>
                            <th scope="col">Discount Value</th>
                            <th scope="col">Coupon Usage Count</th>
                            <th scope="col">Min Amount</th>
                            <th scope="col">Start Date</th>
                            <th scope="col">End Date</th>
                            <th scope="col">Status</th>
                            <th scope="col" class="product-table-last">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% coupons.forEach((coupon, index)=> { %>
                            <tr scope="row">
                                <td>
                                    <%= index + 1 %>
                                </td>
                                <td>
                                    <%= coupon.code %>
                                </td>
                                <td>
                                    <%= coupon.discountType %>
                                </td>
                                <td>
                                    <%= coupon.discountValue %>
                                </td>
                                <td>
                                    <%= coupon.usageCount %>
                                </td>
                                <td>
                                    <%= coupon.minimumOrderAmount %>
                                </td>
                                <td>
                                    <%= new Date(coupon.startDate).toLocaleDateString() %>
                                </td>
                                <td>
                                    <%= new Date(coupon.endDate).toLocaleDateString() %>
                                </td>
                                <td>
                                    <%= coupon.isActive ? 'Active' : 'Blocked' %>
                                </td>
                                <td class="coupon-action">
                                    <a href="#" id="edit-collection-modal" data-bs-toggle="modal"
                                        data-bs-target="#editCollection" onclick="editCoupon('<%= coupon.id %>')"><i
                                            class="bi bi-pencil-square"></i></a>
                                    <a href="/admin/statuscoupon?id=<%= coupon.id %>&status=<%= coupon.isActive %>">
                                        <i class="bi bi-x-circle m-2"></i>
                                    </a>
                                    <a href="#" onclick="confirmDelete('<%= coupon._id %>')"><i
                                            class="bi bi-trash3"></i></a>
                                </td>
                            </tr>
                            <% }) %>
                    </tbody>
                </table>
        
    <!------------------------------ Add Coupon Modal ---------------------------->

  <!-- Add Coupon Modal -->
<div class="modal fade" id="addCollection" tabindex="-1" aria-labelledby="addCouponLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addCouponLabel">Add Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addCouponForm">
                    <!-- Coupon Code -->
                    <div class="mb-3">
                        <label for="code" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="code" name="code" required>
                    </div>
                    
                    <!-- Discount Type -->
                    <div class="mb-3">
                        <label for="discountType" class="form-label">Discount Type</label>
                        <select class="form-control" id="discountType" name="discountType" required>
                            <option value="Percentage">Percentage</option>
                            <option value="Fixed">Fixed</option>
                        </select>
                    </div>
                    
                    <!-- Discount Value -->
                    <div class="mb-3">
                        <label for="discountValue" class="form-label">Discount Value</label>
                        <input type="number" class="form-control" id="discountValue" name="discountValue" required>
                    </div>
                           <!--  Coupon Usage count -->
                           <div class="mb-3">
                            <label for="usageCount" class="form-label">Coupon Usage Count</label>
                            <input type="number" class="form-control" id="usageCount" name="usageCount" required>
                        </div>
                    
                    <!-- Start Date -->
                    <div class="mb-3">
                        <label for="startDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="startDate" name="startDate" required>
                    </div>
                    
                    <!-- End Date -->
                    <div class="mb-3">
                        <label for="endDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="endDate" name="endDate" required>
                    </div>
                    
                    <!-- Minimum Order Amount -->
                    <div class="mb-3">
                        <label for="minimumOrderAmount" class="form-label">Minimum Order Amount</label>
                        <input type="number" class="form-control" id="minimumOrderAmount" name="minimumOrderAmount" required>
                    </div>

                    <!-- Max Order Amount (conditionally shown) -->
                    <div class="mb-3" id="maxOrderAmountWrapper" style="display: none;">
                        <label for="maxOrderAmount" class="form-label">Maximum Discount Amount</label>
                        <input type="number" class="form-control" id="maxOrderAmount" name="maxDiscountAmount">
                    </div>
                   
                    <!-- Submit Button -->
                    <button type="submit" class="btn" style="background-color: #0a0df1;">Add Coupon</button>
                </form>
            </div>
        </div>
    </div>
</div>

    <!--------------------------- Edit Coupon Modal ---------------------------->

  <!-- Edit Coupon Modal -->
<div class="modal fade" id="editCollection" tabindex="-1" aria-labelledby="editCouponLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCouponLabel">Edit Coupon</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editCouponForm">
                    <input type="hidden" id="editCouponId" name="id">
                    
                    <!-- Coupon Code -->
                    <div class="mb-3">
                        <label for="editCode" class="form-label">Coupon Code</label>
                        <input type="text" class="form-control" id="editCode" name="code" required>
                    </div>
                    
                    <!-- Discount Type -->
                    <div class="mb-3">
                        <label for="editDiscountType" class="form-label">Discount Type</label>
                        <select class="form-control" id="editDiscountType" name="discountType" required>
                            <option value="Percentage">Percentage</option>
                            <option value="Fixed">Fixed</option>
                        </select>
                    </div>

                    <!-- Discount Value -->
                    <div class="mb-3">
                        <label for="editDiscountValue" class="form-label">Discount Value</label>
                        <input type="number" class="form-control" id="editDiscountValue" name="discountValue" required>
                    </div>
                        <!--  Coupon Usage count -->
                        <div class="mb-3">
                            <label for="editusageCount" class="form-label">Coupon Usage Count</label>
                            <input type="number" class="form-control" id="editusageCount" name="usageCount" required>
                        </div>

                    <!-- Start Date -->
                    <div class="mb-3">
                        <label for="editStartDate" class="form-label">Start Date</label>
                        <input type="date" class="form-control" id="editStartDate" name="startDate" required>
                    </div>

                    <!-- End Date -->
                    <div class="mb-3">
                        <label for="editEndDate" class="form-label">End Date</label>
                        <input type="date" class="form-control" id="editEndDate" name="endDate" required>
                    </div>

                    <!-- Minimum Order Amount -->
                    <div class="mb-3">
                        <label for="editMinimumOrderAmount" class="form-label">Minimum Order Amount</label>
                        <input type="number" class="form-control" id="editMinimumOrderAmount" name="minimumOrderAmount" required>
                    </div>

                    <!-- Max Order Amount (conditionally shown) -->
                    <div class="mb-3" id="editMaxOrderAmountWrapper" style="display: none;">
                        <label for="editMaxOrderAmount" class="form-label">Maximum Discount Amount</label>
                        <input type="number" class="form-control" id="editMaxOrderAmount" name="maxDiscountAmount">
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn btn-primary">Update Coupon</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!------------------------------------------------pagination-------------------------------------------------------->
  <!-- Pagination -->
  <div class="pagination">
    <% if (currentPage > 1) { %>
        <a href="/admin/coupons?page=<%= currentPage - 1 %>&search=<%= search %>">Prev</a>
    <% } %>
    
    <% for (let i = 1; i <= totalPages; i++) { %>
        <a href="/admin/coupons?page=<%= i %>&search=<%= search %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
    <% } %>
    
    <% if (currentPage < totalPages) { %>
        <a href="/admin/coupons?page=<%= currentPage + 1 %>&search=<%= search %>">Next</a>
    <% } %>
</div>


        <script>
            //--------------------------- Add Coupon ---------------------------
            // For Add Coupon Modal
document.getElementById('discountType').addEventListener('change', function() {
    var discountType = this.value;
    var maxOrderAmountWrapper = document.getElementById('maxOrderAmountWrapper');
    if (discountType === 'Percentage') {
        maxOrderAmountWrapper.style.display = 'block';  // Show the Max Order Amount field
    } else {
        maxOrderAmountWrapper.style.display = 'none';   // Hide the Max Order Amount field
    }
});

// For Edit Coupon Modal
document.getElementById('editDiscountType').addEventListener('change', function() {
    var discountType = this.value;
    var editMaxOrderAmountWrapper = document.getElementById('editMaxOrderAmountWrapper');
    if (discountType === 'Percentage') {
        editMaxOrderAmountWrapper.style.display = 'block';  // Show the Max Order Amount field
    } else {
        editMaxOrderAmountWrapper.style.display = 'none';   // Hide the Max Order Amount field
    }
});

document.getElementById('addCouponForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    // Validation Logic
    const code = document.getElementById('code').value.trim();
    const discountValue = document.getElementById('discountValue').value.trim();
    const usageCount = document.getElementById('usageCount').value.trim();
    const startDate = new Date(document.getElementById('startDate').value);
    const endDate = new Date(document.getElementById('endDate').value);
    const currentDate = new Date();
    const minimumOrderAmount = document.getElementById('minimumOrderAmount').value.trim();
    
    // Validation for Coupon Code
    if (!code || code.length < 8) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Coupon Code must be at least 8 characters long.',
        });
        return;
    }
    if (/[^a-zA-Z0-9]/.test(code)) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Coupon Code must contain only alphabets and numbers.',
        });
        return;
    }

    // Validation for Discount Value (Fixed)
    const discountType = document.getElementById('discountType').value;
    if (discountType === 'Fixed') {
        if (discountValue < 1 || discountValue > 100) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Discount Value for Fixed must be between 1 and 100.',
            });
            return;
        }
    }

    // Validation for Usage Count
    if (usageCount < 1 || usageCount > 10) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Coupon Usage Count must be between 1 and 10.',
        });
        return;
    }

    // Validation for Start Date - must be today or any date after today
    const today = currentDate.setHours(0, 0, 0, 0); // Set to midnight
    if (startDate < today) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Start Date must be today or a date after today.',
        });
        return;
    }

    // Validation for End Date
    const endDates = new Date(document.getElementById('endDate').value);
    if (endDates <= startDate) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'End Date must be later than Start Date.',
        });
        return;
    }

    // Validation for Minimum Order Amount
    if (minimumOrderAmount.length === 0 || minimumOrderAmount <= 0) {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Minimum Order Amount is required and should be greater than 0.',
        });
        return;
    }

    // If all validations pass, proceed with form submission
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/admin/addcoupon', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
        });
        const result = await response.json();
        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: result.message,
            }).then(() => {
                this.reset();
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: result.message,
            });
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'An error occurred while adding the coupon.',
        });
    }
});

            //--------------------------- Edit coupon ---------------------------

            document.addEventListener('DOMContentLoaded', function () {
                var editCouponModal = new bootstrap.Modal(document.getElementById('editCollection'));
                document.getElementById('editCouponForm').addEventListener('submit', async (event) => {
                    event.preventDefault();
                    const formData = new FormData(event.target);
                    const data = Object.fromEntries(formData.entries());
                    data.id = document.getElementById('editCouponId').value;
                    try {
                        const response = await fetch(`/admin/editcoupon/${data.id}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(data),
                        });
                        const result = await response.json();
                        Swal.fire({
                            title: 'Coupon Updated Successfully',
                            text: result.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        }).then(() => {
                            window.location.reload();
                        });
                    } catch (error) {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error',
                            text: 'Failed to update coupon.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                });

                window.editCoupon = function (id) {
                    fetch(`/admin/coupons/${id}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Network response was not ok');
                            }
                            return response.json();
                        })
                        .then(coupon => {
                            document.getElementById('editCouponId').value = coupon._id;
                            document.getElementById('editCode').value = coupon.code;
                            document.getElementById('editDiscountType').value = coupon.discountType;
                            document.getElementById('editDiscountValue').value = coupon.discountValue;
                            document.getElementById('editusageCount').value = coupon.usageCount;
                            document.getElementById('editStartDate').value = new Date(coupon.startDate).toISOString().split('T')[0];
                            document.getElementById('editEndDate').value = new Date(coupon.endDate).toISOString().split('T')[0];
                            document.getElementById('editMinimumOrderAmount').value = coupon.minimumOrderAmount;
                            editCouponModal.show();
                        })
                        .catch(error => {
                            console.error('Error fetching coupon data:', error);
                            Swal.fire({
                                title: 'Error',
                                text: 'Failed to load coupon data.',
                                icon: 'error',
                                confirmButtonText: 'OK'
                            });
                        });
                };
            });

            //--------------------------- Sweet delete ---------------------------

            async function confirmDelete(id) {
                const confirmResult = await Swal.fire({
                    title: 'Are you sure?',
                    text: 'You are about to delete this coupon. This action cannot be undone.',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                });
                if (confirmResult.isConfirmed) {
                    deleteCoupon(id);
                }
            }

            //--------------------------- Delete Coupon ---------------------------

            async function deleteCoupon(id) {
                try {
                    const response = await fetch(`/admin/deletecoupon/${id}`, {
                        method: 'DELETE',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const result = await response.json();
                    Swal.fire({
                        title: 'Delete Coupon',
                        text: result.message,
                        icon: 'success',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        window.location.reload();
                    });
                } catch (error) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Error deleting coupon',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            }

        </script>


      