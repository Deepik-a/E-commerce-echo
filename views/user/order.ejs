<%- include('navbar') %>

<!-- jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Bootstrap JS -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!--breadcrumbs-->

<div class="container mx-auto mt-8 px-4">
  <nav class="flex" aria-label="Breadcrumb">
  <ol class="inline-flex items-center space-x-1 md:space-x-2 rtl:space-x-reverse">
    <li class="inline-flex items-center">
      <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-blue-600 dark:text-gray-400 dark:hover:text-white">
        <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
          <path d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z"/>
        </svg>
        Home
      </a>
    </li>
    <li>
      <div class="flex items-center">
        <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
        </svg>
        <a href="/userprofile" class="ms-1 text-sm font-medium text-gray-700 hover:text-blue-600 md:ms-2 dark:text-gray-400 dark:hover:text-white">Profile</a>
      </div>
    </li>
    <li aria-current="page">
      <div class="flex items-center">
        <svg class="rtl:rotate-180 w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
        </svg>
        <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2 dark:text-gray-400">Orders</span>
      </div>
    </li>
  </ol>
</nav>

  <div class="flex justify-center">
      <div class="w-full max-w-4xl">
          <!-- Order Card -->
          <% orderDetails.forEach(order => { %>
            <% if (order && order._id) { %>
              <div class="mb-6 overflow-hidden bg-white rounded-lg shadow-md border border-gray-100">
                <% order.items.forEach(item => { %>
                  <% if (item && item.productId && item.productId._id) { %>  <!-- Check if item and its properties are valid -->
                    <div class="flex flex-col md:flex-row p-6 gap-6">
                      <button onclick="viewOrder('<%= order._id %>')">
                 
                        <img src="/uploads/<%= item.productImage %>" 
                             class="w-full md:w-48 h-48 object-cover rounded-lg">
                      </button>
                        <div class="flex-1 space-y-4">
                          <div class="flex justify-between items-start">
                              <h5 class="text-xl font-semibold text-gray-900">
                                  <%=item.productId.name%>
                              </h5>
                              <p class="text-lg font-bold text-gray-900">
                                <i class="fa-solid fa-indian-rupee-sign"></i><%= item.productPrice %> x <%= item.productCount %>
                              </p>
                          </div>
            
                        <!-- Delivery Status Section -->
                        <div id="delivery-status-<%= order._id %>" class="space-y-2">
                          <% if (item.status === 'Cancelled') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-red-500"></span>
                              <strong class="font-medium text-red-600">Cancelled</strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your order has been cancelled.</p>
                          <% } else if (item.status === 'Delivered') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-green-500"></span>
                              <strong class="font-medium text-green-600">Delivered</strong>
                              <span class="text-gray-600">on <%= order.updatedAt.toLocaleDateString() %></span>
                            </div>
                            <p class="text-gray-600 text-sm">Your item has been delivered.</p>
                          <% } else if (item.status === 'Pending') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-yellow-500"></span>
                              <strong class="font-medium text-yellow-600">Pending</strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your order is Pending.</p>
                          <% }else if (item.status === 'Shipped') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-yellow-500"></span>
                              <strong class="font-medium text-yellow-600">Shipped</strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your order is Shipped</p>
                            <% }else if (item.status === 'Requested') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-violet-500"></span>
                              <strong class="font-medium text-violet-600">Requested</strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your request has been sent.</p>
                          <% } else if (item.status === 'Rejected') { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-gray-500"></span>
                              <strong class="font-medium text-gray-600">Rejected</strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your request has been rejected.</p>
                          <% } else { %>
                            <div class="flex items-center gap-2">
                              <span class="w-2.5 h-2.5 rounded-full bg-blue-500"></span>
                              <strong class="font-medium text-blue-600">Status: <%= item.status %></strong>
                            </div>
                            <p class="text-gray-600 text-sm">Your order status is <%= item.status %>.</p>
                          <% } %>
                        </div>
            
                        <!-- Cancel and Return button -->
                        <% if (item.status === 'Delivered') { %>
                          <div class="flex flex-wrap gap-3 pt-4">
                            <button onclick="openModal('<%= order._id %>','<%= item.productId._id %>', 'return')" 
                                    class="px-4 py-2 text-sm font-medium text-white bg-red-700 rounded-md hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-700 focus:ring-offset-2 transition-colors">
                              Return Order
                            </button>
                          </div>
                        <% } else if (item.status !== 'Cancelled' && item.status !== 'Requested' && item.status !== 'Rejected') { %>
                          <div class="flex flex-wrap gap-3 pt-4">
                            <button onclick="openModal('<%= order._id %>','<%= item.productId._id %>', 'cancel')" 
                                    class="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition-colors">
                              Cancel Order
                            </button>
                          </div>
                        <% } %>
            
                        <!-- Payment Retry (For Pending orders and failed payment) -->
                        <% if (item.status === 'Pending' && ! order.paymentStatus) { %>
                       
                          <div class="flex flex-col items-center p-4 bg-red-100 rounded-lg shadow-lg space-y-4">
                            <p class="text-xl font-medium text-red-600">Oops! Payment Failed</p>
                            <p class="text-gray-700 text-center">
                              There was an issue with your payment. Please try again to complete your purchase.
                            </p>
                            <button 
                                type="button" 
                                onclick="retryPayment('<%= order._id %>')" 
                                class="px-6 py-3 bg-green-600 hover:bg-green-700 text-white text-sm font-semibold rounded-md transition duration-200 ease-in-out transform hover:scale-105 focus:ring-2 focus:ring-green-500 focus:outline-none">
                              Pay Now
                            </button>
                          </div>
                        <% } %>
                      </div>
                    </div>
                  <% } %> <!-- Check for valid item and productId -->
                <% }) %>
              </div>
            <% } %> <!-- Check for valid order -->
          <% }) %>
          
        
        
        <!-- Modal for Cancel and Return Action -->
        <div id="cancelModal" class="hidden fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-50">
            <div class="bg-white rounded-lg w-1/3 p-6">
                <h2 class="text-lg font-semibold mb-4" id="modalTitle">Reason for Action</h2>
                <form id="cancelForm">
                  <% orderDetails.forEach(order => { %>
                    <input type="hidden" id="orderId" name="orderId" value="<%=order._id%>">
                    <input type="hidden" id="actionType" name="actionType" value="">
                    <input type="hidden" id="productId" value="<%=order.items.productId %>">
                    <% }) %>
                    <div class="mb-4">
                        <label for="reason" class="block text-gray-700">Enter Reason:</label>
                        <textarea id="reason" name="reason" class="w-full p-2 border border-gray-300 rounded-md" rows="3" required></textarea>
                    </div>
                    
                    <div class="flex justify-end gap-3">
                        <button type="button" onclick="closeModal()" class="px-4 py-2 bg-gray-500 text-white rounded-md">Cancel</button>
                        <button type="submit" class="px-4 py-2 bg-red-600 text-white rounded-md">Submit</button>
                    </div>
                </form>
            </div>
        </div>
        
    <div class="mt-4 flex justify-center space-x-4">



  <!-- Pagination -->


  <!-- Previous Button -->
  <% if (currentPage > 1) { %>
    <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>" 
       class="bg-gray-200 text-black px-4 py-2 rounded hover:bg-gray-300">
      Previous
    </a>
  <% } else { %>
    <span class="bg-gray-200 text-gray-400 px-4 py-2 rounded cursor-not-allowed">
      Previous
    </span>
  <% } %>

  <!-- Page Numbers -->
  <% for (let i = 1; i <= totalPage; i++) { %>
    <a href="?page=<%= i %>&limit=<%= limit %>" 
       class="bg-gray-200 text-black px-4 py-2 rounded hover:bg-gray-300 <%= currentPage === i ? 'bg-gray-400' : '' %>">
      <%= i %>
    </a>
  <% } %>

  <!-- Next Button -->
  <% if (currentPage < totalPage) { %>
    <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>" 
       class="bg-gray-200 text-black px-4 py-2 rounded hover:bg-gray-300">
      Next
    </a>
  <% } else { %>
    <span class="bg-gray-200 text-gray-400 px-4 py-2 rounded cursor-not-allowed">
      Next
    </span>
  <% } %>
</div>

        
          <!-- No More Results Message -->
          <div class="text-center py-8 border-t border-gray-100">
              <p class="text-gray-500 font-medium">No More Results To Display</p>
          </div>
      </div>
  </div>
</div>
<!-- Modal for Reason Input -->



<!-- Modal -->

<div id="modalBackground" class="fixed inset-0 bg-black/50 backdrop-blur-sm transition-opacity z-40 hidden"></div>
<div id="orderModal" class="fixed inset-0 z-50 flex items-center justify-center p-4 hidden">
    <div class="relative w-full max-w-4xl bg-white rounded-xl shadow-2xl">
        <!-- Header -->
        <h2 class="text-2xl font-semibold text-gray-900 p-6 border-b border-gray-200">Order Details</h2>
        
        <!-- Main Content -->
        <div class="p-6">
            <!-- Two Column Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
                <!-- Left Column -->
                <div>
                    <div class="mb-4">
                        <p class="font-medium text-gray-900">Order ID: <span id="orderId" class="text-gray-700"></span></p>
                        <p class="font-medium text-gray-900">Order Date: <span id="orderDate" class="text-gray-700"></span></p>
                    </div>
                    
                    <div class="mt-6">
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">Shipping Address</h3>
                        <p id="shippingAddress" class="text-gray-700"></p>
                    </div>
                </div>
                
                <!-- Right Column -->
                <div>
                    <div class="mb-4">
                        <h3 class="text-lg font-semibold text-gray-900 mb-2">Payment Method</h3>
                        <p id="paymentMethod" class="text-gray-700"></p>
                    </div>
                    <div class="mb-4">
                      <h3 class="text-lg font-semibold text-gray-900 mb-2">Coupon discount</h3>
                      <p id="couponApplied" class="text-gray-700"></p>
                  </div> 
                </div>
                <div>
              </div>
            </div>
            
            <!-- Items Table -->
            <div class="mt-8">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Items Purchased</h3>
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead>
                            <tr class="bg-gray-50">
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Product</th>
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Image</th>
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Quantity</th>
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Price</th>
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Discount</th>
                                <th class="px-6 py-3 text-left text-sm font-medium text-gray-700">Status</th>
                               
                              
                            </tr>
                        </thead>
                        <tbody id="itemsPurchased" class="divide-y divide-gray-200">
                            <!-- Items will be dynamically inserted here -->
                        </tbody>
                    </table>
                </div>
            </div>
            
            <!-- Total Price -->
            <div class="mt-6 flex justify-end">
                <p class="text-lg">
                    <span class="font-semibold text-gray-900">Total Price:</span>
                    <span class="ml-2">₹<span id="totalPrice" class="text-gray-900"></span></span>
                </p>
            </div>
            <button onclick="downloadOrderPDF()" class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg transition-colors duration-200">
              Download Invoice as PDF
          </button>
            <!-- Close Button -->
            <div class="mt-8 flex justify-end">
                <button onclick="closeModalOrderDetails()" class="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-colors duration-200">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Include SweetAlert2 Script -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>

  function viewOrder(orderId){    
    document.getElementById('modalBackground').classList.remove('hidden');
    document.getElementById('orderModal').classList.remove('hidden');

    fetch(`/orders/${orderId}`)
    .then(response => response.json())
    .then(order => {
 console.log(`order = ${order}`);
 
               // Populate basic order details
               document.getElementById('orderId').textContent = order.orderId || order._id;
            console.log("hi,i am in the order",order)
            document.getElementById('orderDate').textContent = new Date(order.createdAt).toLocaleDateString();
            document.getElementById('shippingAddress').textContent = order.address;
    

            document.getElementById('paymentMethod').textContent = order.paymentMethod;
            document.getElementById('couponApplied').textContent = `₹${order.couponDiscount}`
           document.getElementById('totalPrice').textContent = order.payableAmount.toLocaleString();

            // Clear existing items
            const itemsTable = document.getElementById('itemsPurchased');
            itemsTable.innerHTML = '';

            // Add items with status
            order.items.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
    <tr class="hover:bg-gray-50 transition-colors">
    <!-- Product Name -->
    <td class="px-6 py-4">
        <p class="text-sm text-gray-700 font-medium">${item.productId.name}</p>
    </td>
    
    <!-- Product Image -->
    <td class="px-6 py-4">
        <img src="/uploads/${item.productImage}" 
             alt="Product image" 
             class="w-16 h-16 object-cover rounded-lg shadow-sm hover:shadow-md transition-shadow">
    </td>
    
    <!-- Product Count -->
    <td class="px-6 py-4">
        <span class="text-sm text-gray-700">${item.productCount}</span>
    </td>
    
    <!-- Product Price -->
    <td class="px-6 py-4">
        <span class="text-sm font-medium text-gray-900">
            ₹${item.productPrice} × ${item.productCount}
        </span>
    </td>
    
    <!-- Discount -->
    <td class="px-6 py-4">
        <span class="text-sm font-medium text-green-600">
            ${item.productId.discount}%
        </span>
    </td>
    
    <!-- Status -->
    <td class="px-6 py-4">
        <div class="flex flex-col gap-2">
            <span class="px-3 py-1 text-xs font-medium rounded-full inline-flex items-center justify-center ${getStatusClass(item.productStatus)}">
                ${item.status}
            </span>
            <span class="text-xs text-gray-500">
                ${getStatusTimeline(item.status)}
            </span>
        </div>
    </td>
</tr>
            
                `;
                itemsTable.appendChild(row);
            });

            // Add order status section
            const orderStatusDiv = document.getElementById('orderStatus');
            if (orderStatusDiv) {
                orderStatusDiv.innerHTML = `
                    <div class="flex items-center space-x-2">
                        <span class="px-3 py-1 text-xs font-medium rounded-full ${getStatusClass(order.status)}">
                            ${order.status}
                        </span>
                        ${order.isCancel ? 
                            '<span class="text-red-600 text-sm">(Order Cancelled)</span>' 
                            : ''}
                    </div>
                `;
            }
    })
  }
  function getStatusClass(status) {
    const statusClasses = {
        'Pending': 'bg-yellow-100 text-yellow-800',
        'Shipped': 'bg-blue-100 text-blue-800',
        'Delivered': 'bg-purple-100 text-purple-800',
        'Cancelled': 'bg-red-100 text-red-800',
        'Returned': 'bg-gray-100 text-gray-800'
    };
    return statusClasses[status] || 'bg-gray-100 text-gray-800';
}

function getStatusTimeline(currentStatus) {
    const statuses = ['Pending', 'Shipped', 'Delivered'];
    const currentIndex = statuses.indexOf(currentStatus);
    
    if (currentStatus === 'Cancelled' || currentStatus === 'Returned') {
        return ''; // Don't show timeline for cancelled/returned items
    }

    return `
        <div class="mt-2">
            <div class="flex items-center space-x-2 text-xs">
                ${statuses.map((status, index) => `
                    <span class="${index <= currentIndex ? 'text-blue-600' : 'text-gray-400'}">
                        ${status}
                    </span>
                    ${index < statuses.length - 1 ? `
                        <span class="${index < currentIndex ? 'text-blue-600' : 'text-gray-300'}">→</span>
                    ` : ''}
                `).join('')}
            </div>
        </div>
    `;
}
  function closeModalOrderDetails() {
    document.getElementById('modalBackground').classList.add('hidden');
    document.getElementById('orderModal').classList.add('hidden');
}
// When the Cancel Order button is clicked, open the modal and set the order ID
function openModal(orderId, productId, action) {
  console.log(`productId = ${productId}`)
  console.log(`orderId = ${orderId}`)
  console.log(`action = ${action}`)

    document.getElementById('cancelModal').classList.remove('hidden');
    document.getElementById('orderId').value = orderId;
    document.getElementById('productId').value = productId; // Set productId
    document.getElementById('actionType').value = action;
    document.getElementById('modalTitle').innerText = `Reason for ${action.charAt(0).toUpperCase() + action.slice(1)} Order`;
}

  // Close Modal Function
  function closeModal  () {
    document.getElementById('cancelModal').classList.add('hidden');
    document.getElementById('reason').value = '';
  }

// JavaScript for submitting the cancel/return form with reason
document.getElementById('cancelForm').addEventListener('submit', function(e) {
  e.preventDefault();
  console.log('prevented')
  const orderId = document.getElementById('orderId').value;
  const productId = document.getElementById('productId').value;
  const actionType = document.getElementById('actionType').value;
  const reason = document.getElementById('reason').value;

  fetch(`/cancelOrder/${orderId}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ action: actionType, reason: reason ,productId:productId})
  })
  .then(response => response.json())
  .then(data => {
    Swal.fire({
      icon: 'success',  // Change this to 'error' for error messages
      title: 'Success',
      text: data.message,  // Display success message from server
      confirmButtonText: 'OK',
    }).then(() => {
      closeModal();  // Close the modal
      // Optionally refresh the page or update the UI
      location.reload(); // Uncomment this if you want to refresh the page
    });
  })
  .catch(error => {
    console.error('Error:', error);
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'An error occurred while processing your request.',
      confirmButtonText: 'OK'
    });
  });
});


function showError(message) {
  // You can customize this to show the error on the UI
  alert(message);
  console.error(message);
}

async function downloadOrderPDF (){
try {
  const orderId = document.getElementById('orderId').value
  const response = await fetch(`/orders/dowload-pdf/${orderId}`,{
    method:'GET',
    headers:{
      'Content-type':'application/json',
    },
  });

  if(!response.ok) throw new Error('PDF generation failed')
  const blob = await response.blob();
        const downloadUrl = window.URL.createObjectURL(blob);
        const link = document.createElement('a');
        link.href = downloadUrl;
        link.download = `order-${orderId}.pdf`;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        window.URL.revokeObjectURL(downloadUrl);
} catch (error) {
  console.log(`error dowloading PDf ${error}`)
}
}

</script>

<%- include('footer') %>