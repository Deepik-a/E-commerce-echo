
<%-include('navbar') %>
<%-include('navbar2') %>
<title>Your Cart</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    
<style>
    .cart-container {
    animation: slideIn 0.5s ease-out;
    border-radius: 12px;
    padding: 25px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
  margin-bottom: 50px;
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.cart-header {
    color: rgb(26, 83, 25);
    margin-bottom: 1.5rem;
    animation: fadeIn 0.8s ease-out;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

.table-responsive {
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
}

.cart-table {
    margin-bottom: 0;
    background-color: white;
}

.cart-table th {
    background-color: rgb(26, 83, 25);
    color: white;
    border: none;
    padding: 15px;
}



.product-image {
    transition: transform 0.3s ease;
    max-width: 150px;
    height: auto;
}

.quantity-control {
    display: flex;
    align-items: center;
    gap: 5px;
}

.quantity-btn {
    background-color: rgb(26, 83, 25);
    color: white;
    border: none;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
}



.quantity-input {
    width: 50px !important;
    text-align: center;
    border: 1px solid rgb(128, 175, 129);
}

.remove-btn {
    background-color: #800000;
    border: none;
    color: white;
    transition: all 0.3s ease;
}



.cart-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 2rem;
    flex-wrap: wrap;
    gap: 1rem;
}

.total-amount {
    font-size: 1.25rem;
    color: rgb(26, 83, 25);
    animation: pulse 2s infinite;
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}

.checkout-btn {
    background-color: rgb(26, 83, 25);
    color: white;
    border: none;
    padding: 12px 30px;
    border-radius: 6px;
    transition: all 0.3s ease;
    font-size: 1.1rem;
}


.empty-cart {
    text-align: center;
   width:100%;
   height:600px;
    color: rgb(26, 83, 25);
    font-size: 2.2rem;
    font-weight: bold;
    background-image: url('../../uploads/close-up-toy-cart-with-easter-eggs.jpg');
    background-position: center;
    background-size: cover;
   
    
  
}

@media (max-width: 768px) {
    .cart-container {
        padding: 15px;
    }

    .cart-table thead {
        display: none;
    }

    .cart-table, .cart-table tbody, .cart-table tr, .cart-table td {
        display: block;
        width: 100%;
    }

    .cart-table tr {
        margin-bottom: 1rem;
        border: 1px solid rgb(128, 175, 129);
        border-radius: 8px;
        padding: 10px;
    }

    .cart-table td {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        border: none;
    }

    .cart-table td::before {
        content: attr(data-label);
        font-weight: bold;
        margin-right: 1rem;
    }

    .product-image {
        max-width: 120px;
    }

    .cart-footer {
        flex-direction: column;
        text-align: center;
    }

    .total-amount {
        margin-bottom: 1rem;
    }

    .quantity-btn, .remove-btn, .checkout-btn {
        width: 100%;
        margin: 5px 0;
        padding: 10px;
    }
}
.quantity-btn:hover {
    background-color: rgb(34, 101, 33); /* Slightly darker green for hover effect */
    color: white; /* Ensure text color stays white */
    transform: scale(1.1); /* Add a subtle zoom effect */
}

.remove-btn:hover {
    background-color: #a00000; /* Slightly lighter red for hover effect */
    color: white;
    transform: scale(1.1);
}

.checkout-btn:hover {
    background-color: rgb(34, 101, 33); /* Slightly darker green */
    color: white;
    transform: scale(1.1); /* Add a subtle zoom effect */
}

</style>
    <div class="container mt-5">
        <div class="cart-container">
            <h2 class="cart-header">Your Cart</h2>

            <% if (typeof alertMessage !== 'undefined' && alertMessage !== '') { %>
                <script>
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: '<%= alertMessage %>',
                    });
                </script>
            <% } %>

            <% if (cart.items && cart.items.length > 0) { %>
                <div class="table-responsive">
                    <table class="table cart-table">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Product</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cart.items.forEach(item => { %>
                            <%=cart%>
                                <tr>
                                    <td data-label="Image">
                                        <img src=<%= '/uploads/' +   item.productId.imgArray[0]%> alt="Product Image" class="product-image" />
                                        
                                    </td>
                                    <td data-label="Product"><%= item.productId.name %></td>
                                    <td data-label="Price">Rs <%= item.productPrice.toFixed(0) %></td>
                                    <td data-label="Quantity">
                                        <form class="update-quantity-form" data-product-id="<%= item.productId._id %>">
                                            <div class="quantity-control">
                                                <button type="button" class="btn quantity-btn decrement-quantity" data-action="decrement">-</button>
                                                <input type="text" name="productCount" value="<%= item.productCount %>" readonly class="form-control quantity-input" />
                                                <button type="button" class="btn quantity-btn increment-quantity" data-action="increment">+</button>
                                            </div>
                                        </form>
                                    </td>
                                    <td data-label="Total">Rs <span class="item-total" data-price="<%= item.productPrice %>"><%= (item.productPrice * item.productCount).toFixed(0) %></span></td>
                                    <td data-label="Action">
                                        <a href="/cart/remove/<%= item.productId._id %>" class="btn remove-btn">Remove</a>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>

                <div class="cart-footer">
                    <h4 id="cart-total" class="total-amount">Total Amount: Rs <%= cart.items.reduce((total, item) => total + (item.productPrice * item.productCount), 0).toFixed(0) %></h4>
                    <button id="checkout-btn" class="btn checkout-btn">Buy Now</button>
                </div>
            <% } else { %>
                <div class="empty-cart ">
                    <p>Your cart is empty.</p>
                </div>
            <% } %>
        </div>
    </div>




<!-- Script for Sweet alert CDN --> 
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  



<!-- Script to handle limit and stock exceeded -->

    <script>

        document.querySelectorAll('.increment-quantity, .decrement-quantity').forEach(button => {
            button.addEventListener('click', function() {
                const form = this.closest('.update-quantity-form');
                const productId = form.dataset.productId;
                const action = this.dataset.action;
                const productCountElement = form.querySelector('.quantity-input');
                let productCount = parseInt(productCountElement.value);

                if (action === 'increment') {
                    productCount++;
                } else if (action === 'decrement' && productCount > 1) {
                    productCount--;
                }

                fetch(`/cart/${action}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, productCount })
                })
                .then(response => response.json())
                .then(data => {
                    console.log('Response data:', data);
                    if (data.success) {
                        productCountElement.value = productCount;
                        const itemTotal = (data.updatedPrice).toFixed(2);
                        form.closest('tr').querySelector('.item-total').textContent = itemTotal;
                        document.getElementById('cart-total').textContent = `Total Amount: Rs ${data.cartTotal.toFixed(2)}`;
                        
                        const decrementButton = form.querySelector('.decrement-quantity');
                        if (productCount === 1) {
                            decrementButton.setAttribute('disabled', true);
                        } else {
                            decrementButton.removeAttribute('disabled');
                        }
                    } else {
                        if (data.message.includes('Maximum quantity')) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Limit Exceeded',
                                text: data.message
                            });
                        } else if (data.message.includes('Available quantity')) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Stock Exceeded',
                                text: data.message
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: data.message || 'Could not update quantity'
                            });
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Something went wrong!'
                    });
                });
            });
        });




        document.getElementById('checkout-btn').addEventListener('click', async () => {
    try {
        const response = await fetch('/checkout/validate', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        });

        const data = await response.json();

        if (data.success) {
            // Redirect to checkout if validation succeeds
            window.location.href = '/checkout';
        } else {
            // Show error message using Swal
            Swal.fire({
                icon: 'error',
                title: 'Checkout Error',
                text: data.message, // Show the error message from the backend
            });
        }
    } catch (error) {
        console.error('Error:', error);

        // Handle unexpected errors
        Swal.fire({
            icon: 'error',
            title: 'Unexpected Error',
            text: 'An unexpected error occurred. Please try again later.',
        });
    }
});

    </script>


<%- include('footer') %>
