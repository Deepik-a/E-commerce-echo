




    <title>User Profile</title>
 

    <style>
        :root {
            --primary-color:#1A5319;
            --secondary-color:#80AF81;
            --background-light:#D6EFD8;
            --text-dark:#1A5319;
            --transition-speed: 0.3s;
        }

        body, html {
      margin: 0;
      padding: 0;
      height: 100%;
      overflow: hidden;
    }
        body, html {
        
             /* Add background image */
    background-image: url('../../uploads/Green\ Watercolor\ Leaf\ Linktree\ Background.png'); /* Replace with your image path */
    background-size: cover;
      background-repeat: no-repeat;
     

        }

        .top-bar {
            background-color: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 30px;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .profile-container {
            display: flex;
            height: calc(100vh - 70px);
            margin-top: 70px;
           
        }

     

        .content-area {
            margin-left: 250px;
            flex-grow: 1;
            padding: 20px;
            overflow-y: auto;
           
        }

        .profile-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            object-fit: cover;
            cursor: pointer;
            border: 2px solid var(--primary-color);
        }

        .profile-dropdown {
            position: relative;
        }

        .dropdown-menu {
            right: 0;
            left: auto;
            min-width: 250px;
        }

        .account-menu-item {
            text-decoration: none;
            color: var(--text-dark);
            display: flex;
            align-items: center;
            padding: 12px 15px;
            transition: background-color 0.3s ease;
        }

   
        
        .address-section {
            max-width: 1000px;
            margin: 0 auto;
           
        }

        .address-card {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
            padding: 25px;
            margin-bottom: 25px;
        }

        .user-greeting {
            font-size: 2.2rem;
            font-weight: 600;
        }

        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
            }

         

            .content-area {
                margin-left: 0;
            }
        }
        .card-body {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.address-details {
    flex-grow: 1; /* Ensures that the address takes up remaining space */
}

.d-flex.justify-content-end {
    margin-left: auto; /* Ensures buttons are pushed to the right */
}
/* Styling the breadcrumb container */


/* Styling each breadcrumb item */
.breadcrumb-item {
  font-weight: bold;  /* Apply bold effect */
  color: #1A5319;     /* Apply the desired color */
}

.breadcrumb-item a {
  color: #1A5319; /* Set link color */
  text-decoration: none;  /* Remove underline from links */
  transition: color 0.3s ease;  /* Smooth transition for hover effect */
}

/* Add hover effect for breadcrumb links */
.breadcrumb-item a:hover {
  color: #145f21; /* Slightly darker shade for hover effect */
}

/* Active breadcrumb item style */
.breadcrumb-item.active {
  color: #1A5319;  /* Active item color (same as normal, can be adjusted) */
  font-weight: bold; /* Keep it bold */
}
/* Base sidebar-eco styles - keeping your existing styles */
.sidebar-eco {
    width: 250px;
    background-color: white;
    border-right: 1px solid #e0e0e0;
    overflow-y: auto;
    padding: 20px;
    position: fixed;
    left: 0;
    top: 70px;
    bottom: 0;
    transition: all 0.3s ease;
}

.account-menu {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.account-menu-header {
    padding-bottom: 15px;
    border-bottom: 1px solid #e0e0e0;
}

.account-menu-header h5 {
    color: var(--text-dark);
    margin: 0;
    font-size: 1.25rem;
}

.account-menu-item {
    text-decoration: none;
    color: var(--text-dark);
    display: flex;
    align-items: center;
    padding: 12px 15px;
    transition: background-color 0.3s ease;
    border-radius: 8px;
}

.account-menu-item:hover {
    background-color: var(--background-light);
    color: var(--primary-color);
}

.account-menu-item i {
    margin-right: 12px;
    color: var(--primary-color);
    width: 20px;
    text-align: center;
}

/* Enhanced responsive styles */
@media (max-width: 1024px) {
    .sidebar-eco {
        width: 220px;
    }
    
    .content-area {
        margin-left: 220px;
    }
}

@media (max-width: 768px) {
    .profile-container {
        margin-top: 70px;
    }
    
    .sidebar-eco {
        width: 100%;
        position: relative;
        top: 0;
        height: auto;
        border-right: none;
        border-bottom: 1px solid #e0e0e0;
        padding: 15px;
    }
    
    .content-area {
        margin-left: 0;
        padding: 15px;
    }
    
    .account-menu {
        gap: 10px;
    }
    
    .account-menu-item {
        padding: 10px;
    }
}

@media (max-width: 480px) {
    .account-menu-header h5 {
        font-size: 1.1rem;
    }
    
    .account-menu-item {
        font-size: 0.9rem;
        padding: 8px 10px;
    }
    
    .account-menu-item i {
        margin-right: 10px;
    }
    
    .sidebar-eco {
        padding: 12px;
    }
}

/* Add a hamburger menu for mobile */
@media (max-width: 768px) {
    .sidebar-eco.collapsed {
        display: none;
    }
    
    .sidebar-eco.expanded {
        display: block;
    }
}

    </style>
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Bundle JS (includes Popper.js for dropdowns) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- Include Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" />

<!-- Your HTML Content -->

<!-- Include Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"></script>




    <!-- Top Bar -->
    <div class="top-bar">
        <div class="user-greeting">
            Hi, <%= userDetail.name.length > 8 ? userDetail.name.substring(0, 8) : userDetail.name %>

        </div>
        <div class="profile-dropdown dropdown">
            <img src="https://ui-avatars.com/api/?name=<%= userDetail.name %>&background=1A5319&color=fff&rounded=true&bold=true" 
                 class="profile-avatar dropdown-toggle" 
                 id="profileDropdown" 
                 data-bs-toggle="dropdown" 
                 aria-expanded="false" 
                 alt="Profile"> 
            <ul class="dropdown-menu shadow" aria-labelledby="profileDropdown">
                <li>
                    <a class="dropdown-item account-menu-item" href="#" data-bs-toggle="modal" data-bs-target="#editProfileModal">
                        <i class="fas fa-user-edit"></i> Edit Profile
                    </a>
                </li>
                <li>
                    <a class="dropdown-item account-menu-item" href="/logout">
                        <i class="fas fa-sign-out-alt"></i> Logout
                    </a>
                </li>
            </ul>
        </div>
    </div>
 



<!-- Edit Profile(only name and phone number) Modal -->
<div class="modal" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <% if (userDetail.authMethod === 'google') { %>
                <div class="modal-body" style="color: #1A5319;font-weight: 800;">
                    <p>You cannot edit your profile when logged in via Google authentication.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal">Close</button>
                </div>
            <% } else { %>
                <form action="/update-profile" method="post" id="update-profile-form">
                    <div class="modal-body">
                      <!-- Name Field -->
                      <div class="mb-3">
                        <label for="name" class="form-label">Name</label>
                        <input type="text" class="form-control" name="name" id="name" required maxlength="15"
                               value="<%= userDetail.name %>" placeholder="Name" >
                        <small id="name-error" class="text-danger d-none">Name can only contain letters and spaces.</small>
                      </div>
                  
                      <!-- Phone Field -->
                      <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <input type="text" class="form-control" name="phone" id="phone" required maxlength="10"
                               value="<%= userDetail.phone %>" placeholder="Phone">
                        <small id="phone-error" class="text-danger d-none">Phone must start with 5-9 and be exactly 10 digits.</small>
                      </div>
                    </div>
                    <div class="modal-footer">
                      <button type="submit" class="btn btn-success" id="update-btn" disabled>Update</button>
                    </div>
                  </form>
                  
               
                  
            <% } %>
        </div>
    </div>
</div>




    <div class="profile-container">
        
        <!-- sidebar-eco -->
        <div class="sidebar-eco">
            <div class="account-menu">
                <div class="account-menu-header mb-3">
                    <h5>My Account</h5>
                </div>
                <a href="/orders" class="account-menu-item">
                    <i class="fas fa-box"></i> My Orders
                </a>
                <a href="/wishlist" class="account-menu-item">
                    <i class="fas fa-heart"></i> Wishlist
                </a>
                <a href="/wallet" class="account-menu-item">
                    <i class="fas fa-wallet"></i> My Wallet
                </a>
                <a href="/coupons" class="account-menu-item">
                    <i class="fas fa-ticket-alt"></i> Coupons
                </a>
                
            </div>
        </div>



        <div class="content-area">
            
            <% if (fromCheckout) { %>
                <nav aria-label="breadcrumb" class="breadcrumb-container">
                  <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/checkout">Checkout</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Profile</li>
                  </ol>
                </nav>
              <% } %>
            <div class="address-section">

                <!-- Add Address Form -->

                <div class="address-card">
                    <h4 class="mb-4">Add New Address</h4>
                    <form action="/add-address" method="post" novalidate id="addressForm">
                        <div class="row">
                          <div class="col-md-6 mb-3">
                            <label for="building" class="form-label">Building/Apartment</label>
                            <input type="text" name="building" class="form-control" id="building" placeholder="Building Name" required>
                            <div class="invalid-feedback">Building/Apartment name can only contain letters and numbers.</div>
                          </div>
                          <div class="col-md-6 mb-3">
                            <label for="street" class="form-label">Street</label>
                            <input type="text" name="street" class="form-control" id="street" placeholder="Street Name" required>
                            <div class="invalid-feedback">Street name must only contain letters.</div>
                          </div>
                        </div>
                        <div class="row">
                          <div class="col-md-6 mb-3">
                            <label for="city" class="form-label">City</label>
                            <input type="text" name="city" class="form-control" id="city" placeholder="City" required>
                            <div class="invalid-feedback">City must only contain letters.</div>
                          </div>
                          <div class="col-md-6 mb-3">
                            <label for="state" class="form-label">State</label>
                            <input type="text" name="state" class="form-control" id="state" placeholder="State" required>
                            <div class="invalid-feedback">State must only contain letters.</div>
                          </div>
                        </div>
                        <div class="row">
                          <div class="col-md-6 mb-3">
                            <label for="country" class="form-label">Country</label>
                            <input type="text" name="country" class="form-control" id="country" placeholder="Country" required>
                            <div class="invalid-feedback">Country must only contain letters.</div>
                          </div>
                          <div class="col-md-6 mb-3">
                            <label for="pincode" class="form-label">Pincode</label>
                            <input type="text" name="pincode" class="form-control" id="pincode" placeholder="Pincode" required pattern="\d{6}">
                            <div class="invalid-feedback">Pincode must be a 6-digit number.</div>
                          </div>
                        </div>
                        <div class="row">
                          <div class="col-md-6 mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="text" name="phone" value="<%= userDetail.phone %>" class="form-control" id="phone" placeholder="Phone Number" required>
                            <div class="invalid-feedback">Phone number must start with 5-9 and be 10 digits long.</div>
                          </div>
                          <div class="col-md-6 mb-3">
                            <label for="landmark" class="form-label">Landmark</label>
                            <input type="text" name="landmark" class="form-control" id="landmark" placeholder="Landmark">
                            <div class="invalid-feedback">Landmark must only contain letters.</div>
                          </div>
                        </div>
                        <button type="submit" class="btn w-100" style="background-color: #1A5319;color: #e0e0e0;">Add Address</button>
                      </form>
                      
                </div>
        
                <!-- Added Addresses -->
                <div class="mt-4">
                    <h4 class="mb-3">DELIVERY ADDRESS GIVEN</h4>
                    <% userDetail.address.forEach((address, index) => { %>
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body d-flex justify-content-between align-items-center">
                                <div>
                                    <p class="mb-0">
                                        <%= `${address.building}, ${address.street}, ${address.city}, ${address.state}, ${address.country}` %>
                                    </p>
                                </div>
                                <div>
                                    <!-- Edit Button for each address -->
                                    <button class="btn btn-sm btn-outline-success me-2 editAddressBtn" 
                                            title="Edit" 
                                            data-bs-toggle="modal" 
                                            data-address='<%= JSON.stringify(address) %>'>
                                        <i class="fas fa-edit"></i>
                                    </button>
                
                                    <!-- Delete Button for each address -->
                                    <form action="/delete-address/<%= index %>" method="POST" class="d-inline delete-form">
                                        <button type="button" class="btn btn-sm btn-outline-danger delete-btn" title="Delete">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
                
            </div>
        </div>
        
        
    </div>

    <!-- Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



            <!-- Edit Address (total address)Modal -->
            <div class="modal fade" id="editAddressModal" tabindex="-1" aria-labelledby="editAddressModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
            
                        <div class="modal-header">
                            <h5 class="modal-title" id="editAddressModalLabel">Edit Address</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
            
                        <div class="modal-body">
                            <form action="" method="POST" id="editAddressForm">
                                <input type="hidden" name="index" id="editAddressIndex">
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="editBuilding" class="form-label">Building</label>
                                        <input type="text" name="building" id="editBuilding" class="form-control" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="editStreet" class="form-label">Street</label>
                                        <input type="text" name="street" id="editStreet" class="form-control" required>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="editCity" class="form-label">City</label>
                                        <input type="text" name="city" id="editCity" class="form-control" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="editState" class="form-label">State</label>
                                        <input type="text" name="state" id="editState" class="form-control" required>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="editCountry" class="form-label">Country</label>
                                        <input type="text" name="country" id="editCountry" class="form-control" required>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="editPincode" class="form-label">Pincode</label>
                                        <input type="text" name="pincode" id="editPincode" class="form-control" required>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="editPhone" class="form-label">Phone</label>
                                        <input type="number" name="phone" id="editPhone" class="form-control">
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="editLandmark" class="form-label">Landmark</label>
                                        <input type="text" name="landmark" id="editLandmark" class="form-control">
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-success">Update Address</button>
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                </div>
                            </form>
                        </div>
            
                    </div>
                </div>
            </div>
            
      
            
            
            <script>
                document.getElementById('addressForm').addEventListener('input', function (e) {
  const input = e.target;
  const value = input.value.trim();
  let isValid = true;

  // Validation rules
  const alphaNumericRegex = /^[a-zA-Z0-9 ]+$/; // For building
  const alphaRegex = /^[a-zA-Z ]+$/; // For street, city, state, country, landmark
  const phoneRegex = /^[5-9][0-9]{9}$/; // For phone
  const pincodeRegex = /^\d{6}$/; // For pincode

  if (input.id === 'building' && !alphaNumericRegex.test(value)) {
    isValid = false;
  } else if (
    ['street', 'city', 'state', 'country', 'landmark'].includes(input.id) &&
    !alphaRegex.test(value)
  ) {
    isValid = false;
  } else if (input.id === 'phone' && !phoneRegex.test(value)) {
    isValid = false;
  } else if (input.id === 'pincode' && !pincodeRegex.test(value)) {
    isValid = false;
  }

  // Update input classes
  if (isValid) {
    input.classList.remove('is-invalid');
    input.classList.add('is-valid');
  } else {
    input.classList.remove('is-valid');
    input.classList.add('is-invalid');
  }
});

document.getElementById('addressForm').addEventListener('submit', function (e) {
  const form = e.target;
  let isFormValid = true;

  form.querySelectorAll('input').forEach((input) => {
    if (!input.checkValidity() || input.classList.contains('is-invalid')) {
      input.classList.add('is-invalid');
      isFormValid = false;
    }
  });

  if (!isFormValid) {
    e.preventDefault();
    e.stopPropagation();
  }
});



   // SweetAlert2 Confirmation for Delete Button
   document.querySelectorAll('.delete-btn').forEach((button, index) => {
        button.addEventListener('click', function (e) {
            const form = button.closest('.delete-form'); // Find the corresponding form
            Swal.fire({
                title: 'Are you sure?',
                text: 'This action would delete you address',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#1A5319',
                cancelButtonColor: '#800000',
                confirmButtonText: 'Delete the Address',
                cancelButtonText: 'Cancel',
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit(); // Submit the form if confirmed
                }
            });
        });
    });



    //opening the edit modal

    document.addEventListener('DOMContentLoaded', () => {
    const editButtons = document.querySelectorAll('.edit-btn');

    editButtons.forEach((button, index) => {
        button.addEventListener('click', () => {
            // Ensure modal opens for the clicked button
            const modal = new bootstrap.Modal(document.getElementById('editAddressModal'));
            modal.show();

            // Populate hidden field for index, if needed
            document.getElementById('editIndex').value = index;
        });
    });
});



//edit modal editing and update
document.querySelectorAll('.editAddressBtn').forEach((button, index) => {
    button.addEventListener('click', function () {
        // Get the address data
        const address = JSON.parse(this.dataset.address);

        // Populate modal fields
        document.getElementById('editAddressIndex').value = index;
        document.getElementById('editBuilding').value = address.building;
        document.getElementById('editStreet').value = address.street;
        document.getElementById('editCity').value = address.city;
        document.getElementById('editState').value = address.state;
        document.getElementById('editCountry').value = address.country;
        document.getElementById('editPincode').value = address.pincode;
        document.getElementById('editPhone').value = address.phone;
        document.getElementById('editLandmark').value = address.landmark;

        // Set the form action URL
        document.getElementById('editAddressForm').action = `/edit-address/${index}`;

        // Show the modal
        const editModal = new bootstrap.Modal(document.getElementById('editAddressModal'));
        editModal.show();
    });
});



                    const nameInput = document.getElementById('name');
                    const phoneInput = document.getElementById('phone');
                    const nameError = document.getElementById('name-error');
                    const phoneError = document.getElementById('phone-error');
                    const updateButton = document.getElementById('update-btn');
                  
                    // Regex for validation
                    const nameRegex = /^[a-zA-Z ]+$/;
                    const phoneRegex = /^[5-9][0-9]{9}$/;
                  
                    // Real-time validation function
                    function validateForm() {
                      let isValid = true;
                  
                      // Validate name
                      if (!nameRegex.test(nameInput.value.trim())) {
                        nameError.classList.remove('d-none');
                        isValid = false;
                      } else {
                        nameError.classList.add('d-none');
                      }
                  
                      // Validate phone
                      if (!phoneRegex.test(phoneInput.value.trim())) {
                        phoneError.classList.remove('d-none');
                        isValid = false;
                      } else {
                        phoneError.classList.add('d-none');
                      }
                  
                      // Enable or disable the update button based on validation
                      updateButton.disabled = !isValid;
                    }
                  
                    // Attach event listeners
                    nameInput.addEventListener('input', validateForm);
                    phoneInput.addEventListener('input', validateForm);
                  
                    // Initial validation check
                    validateForm();
                

            </script>
          

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    




       

 
      
