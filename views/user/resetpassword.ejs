<%- include('navbar') %>

<title>Reset Password</title>


    <style>
        body {
            background-image: url('../../uploads/pexels-curtis-adams-1694007-14495881.jpg');
            margin: 0;
            padding: 0;
            min-height: 100vh;
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
            box-sizing: border-box;
        }

        .reset-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }

        .reset-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 1200px;
            display: flex;
            overflow: hidden;
            animation: fadeIn 0.8s ease-out;
            min-height: 600px;
        }

        .image-section {
            flex: 1;
            background: url('../../uploads/pexels-magda-ehlers-pexels-1768513.jpg') center center/cover no-repeat;
            position: relative;
            min-height: 100%;
            animation: slideInLeft 1s ease-out;
        }

        .image-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(80, 141, 78, 0.1);
        }

        .form-section {
            flex: 1;
            padding: 3rem 2rem;
            animation: slideInRight 1s ease-out;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .form-title {
            color: #1A5319;
            margin-bottom: 2rem;
            font-size: 2rem;
            animation: fadeInUp 0.8s ease-out 0.3s backwards;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
            animation: fadeInUp 0.8s ease-out 0.5s backwards;
        }

        .form-control {
            width: 100%;
            padding: 1rem;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        .form-control:focus {
            border-color: rgb(80, 141, 78);
            box-shadow: 0 0 0 3px rgba(80, 141, 78, 0.2);
            outline: none;
        }

        .form-label {
            position: absolute;
            left: 1rem;
            top: 1rem;
            background: white;
            padding: 0 0.5rem;
            color: #666;
            transition: all 0.3s ease;
            pointer-events: none;
        }

        .form-control:focus ~ .form-label,
        .form-control:not(:placeholder-shown) ~ .form-label {
            top: -0.5rem;
            font-size: 0.875rem;
            color: rgb(80, 141, 78);
        }

        .submit-btn {
            width: 100%;
            padding: 1rem;
            background-color:#1A5319;
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            animation: fadeInUp 0.8s ease-out 0.7s backwards;
        }

      

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideInLeft {
            from { transform: translateX(-100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        @keyframes fadeInUp {
            from { 
                transform: translateY(20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .reset-container {
                padding: 1.5rem;
            }

            .reset-card {
                flex-direction: column;
                min-height: auto;
                max-width: 600px;
            }

            .image-section {
                min-height: 300px;
                flex: none;
            }

            .form-section {
                padding: 2rem;
            }
        }

        @media (max-width: 576px) {
            .reset-container {
                padding: 1rem;
            }

            .reset-card {
                border-radius: 15px;
            }

            .image-section {
                min-height: 200px;
            }

            .form-section {
                padding: 1.5rem;
            }

            .form-title {
                font-size: 1.5rem;
                margin-bottom: 1.5rem;
            }

            .form-control {
                padding: 0.875rem;
            }

            .submit-btn {
                padding: 0.875rem;
            }
        }

        @media (max-height: 700px) {
            .reset-card {
                min-height: auto;
            }
        }
    </style>


    <div class="reset-container">
        <div class="reset-card">
            <div class="image-section"></div>
            <div class="form-section">
                <h2 class="form-title">Reset Password</h2>
                <form id="resetForm" method="POST" action="/resetpassword">

                    <div class="form-group">
                        <input type="password" class="form-control" id="newPassword"  name="newPassword" placeholder=" " required>
                        <label class="form-label" for="newPassword">New Password</label>
                        <div class="error-message" id="newPasswordError"></div>
                    </div>
                    <div class="form-group">
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder=" " required>
                        <label class="form-label" for="confirmPassword">Confirm Password</label>
                        <div class="error-message" id="confirmPasswordError"></div>
                    </div>
                    <button type="submit" class="submit-btn">Reset Password</button>
                </form>
            </div>
        </div>
    </div>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- JavaScript -->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const newPasswordInput = document.getElementById('newPassword');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const newPasswordError = document.getElementById('newPasswordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');

            // Real-time validation for empty password fields
            newPasswordInput.addEventListener('input', () => {
                if (newPasswordInput.value.trim() === '') {
                    newPasswordError.textContent = 'Password cannot be empty';
                } else {
                    newPasswordError.textContent = '';
                }
            });

            confirmPasswordInput.addEventListener('input', () => {
                if (confirmPasswordInput.value.trim() === '') {
                    confirmPasswordError.textContent = 'Confirm Password cannot be empty';
                } else {
                    confirmPasswordError.textContent = '';
                }

                if (confirmPasswordInput.value !== newPasswordInput.value) {
                    confirmPasswordError.textContent = 'Passwords do not match';
                } else if (confirmPasswordInput.value.trim() !== '') {
                    confirmPasswordError.textContent = '';
                }
            });

            document.getElementById('resetForm').addEventListener('submit', function (e) {
                e.preventDefault();

                const newPassword = newPasswordInput.value;
                const confirmPassword = confirmPasswordInput.value;

                // Password validation rules
                const passwordRules = {
                    minLength: 8,
                    upperCase: /[A-Z]/,
                    number: /[0-9]/,
                };

                // Validate passwords
                if (newPassword !== confirmPassword) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Passwords Do Not Match',
                        text: 'Please ensure that both password fields match.',
                    });
                    return;
                }

                if (newPassword.length < passwordRules.minLength) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Password',
                        text: `Password must be at least ${passwordRules.minLength} characters long.`,
                    });
                    return;
                }

                if (!passwordRules.upperCase.test(newPassword)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Password',
                        text: 'Password must contain at least one uppercase letter.',
                    });
                    return;
                }

                if (!passwordRules.number.test(newPassword)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Invalid Password',
                        text: 'Password must contain at least one numeric character.',
                    });
                    return;
                }

                // If all validations pass
                Swal.fire({
                    icon: 'success',
                    title: 'Password Reset Successful',
                    text: 'Your password has been reset successfully.',
                }).then(() => {
                      // Remove e.preventDefault(); by submitting the form programmatically
    document.getElementById('resetForm').submit();
                });
            });
        });
    </script>



  <%- include('footer') %>